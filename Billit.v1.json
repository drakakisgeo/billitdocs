{
  "openapi": "3.0.0",
  "info": {
    "title": "Billit",
    "version": "1.0.0",
    "description": "This is the Billit API",
    "contact": {
      "name": "BILLIT G.P.",
      "url": "https://billit.io/contact",
      "email": "support@billit.io"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://api.billit.local/v1",
      "description": "local"
    },
    {
      "url": "https://api.sandbox-billit.xyz/v1",
      "description": "Sandbox"
    },
    {
      "description": "Production",
      "url": "https://api.billit.io/v1"
    }
  ],
  "paths": {
    "account": {
      "get": {
        "summary": "My Account",
        "operationId": "get-user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "minLength": 1
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1
                        },
                        "subdomain": {
                          "type": "string",
                          "minLength": 1
                        },
                        "firstName": {
                          "type": "string",
                          "minLength": 1
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 1
                        },
                        "mobile": {
                          "type": "string"
                        },
                        "isBlocked": {
                          "type": "boolean"
                        },
                        "isSuspended": {
                          "type": "boolean"
                        },
                        "isExpired": {
                          "type": "boolean"
                        },
                        "isAccountant": {
                          "type": "boolean"
                        },
                        "isValidated2fa": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string",
                          "minLength": 1
                        },
                        "updatedAt": {
                          "type": "string",
                          "minLength": 1
                        },
                        "deletedAt": {
                          "type": "null"
                        },
                        "relations": {
                          "type": "object",
                          "properties": {
                            "biller": {
                              "$ref": "#/components/schemas/Biller"
                            },
                            "paymentMethods": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "$ref": "#/components/schemas/Paymentmethod"
                              },
                              "readOnly": true
                            },
                            "vats": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "$ref": "#/components/schemas/Vat"
                              },
                              "readOnly": true
                            },
                            "settings": {
                              "$ref": "#/components/schemas/Setting"
                            },
                            "subscription": {
                              "$ref": "#/components/schemas/Subscription"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": {
                        "uuid": "b3cce081-6796-409a-ace6-f7cf7bfc4771",
                        "email": "example@billit.io",
                        "subdomain": "example",
                        "firstName": "John",
                        "lastName": "Doe",
                        "mobile": "6978787878",
                        "isBlocked": true,
                        "isSuspended": true,
                        "isExpired": true,
                        "isAccountant": true,
                        "isValidated2fa": true,
                        "createdAt": "2020-09-03T13:44:48+00:00",
                        "updatedAt": "2020-09-03T13:44:48+00:00",
                        "deletedAt": null,
                        "relations": {
                          "biller": {
                            "id": 0,
                            "company": "Mπαμπουλίδης O.E.",
                            "companySec": "Mpampoulidis G.P.",
                            "profession": "Υπηρεσίες δοκιμών",
                            "professionSec": "testing services",
                            "vatId": "075656565",
                            "taxOffice": "Α' Πειραιά",
                            "streetAddress": "Τσαμαδού 10-12",
                            "streetAddressSec": "Tsamadou 10-12 str.",
                            "city": "Πειραιάς",
                            "citySec": "Piraeus",
                            "postalCode": "18534",
                            "phone": "2104111111",
                            "phoneSec": "+302104111111",
                            "mobile": "6978787878",
                            "mobileSec": "+306978787878",
                            "fax": "2104111112",
                            "logo": "https://api.billit.io/uploads/logos/92/mpampoulidis-logo.png",
                            "url": "https://test.mpampoulidis.gr",
                            "urlSec": "https://test.mpampoulidis.gr/en",
                            "urlLabel": "Mpampoulidis site",
                            "country": "GR",
                            "freeText": "<p>ΓΕ.ΜΗ: 123123</p>",
                            "freeTextSec": "<p>GEMI: 123123</p>",
                            "createdAt": "2021-04-24T14:15:22Z",
                            "updatedAt": "2021-04-24T14:15:22Z"
                          },
                          "paymentMethods": [
                            {
                              "id": 292,
                              "name": "Εθνική Τράπεζα",
                              "nameSec": "NBG BANK",
                              "info": null,
                              "infoSec": null,
                              "isOnlineMethod": false,
                              "status": true,
                              "default": true,
                              "iban": "1231231231313141414141414141",
                              "bic": "NBG10GD",
                              "accountHolder": "Μπαμπουλίδης Ο.Ε.",
                              "createdAt": "2019-05-22T11:48:04+00:00",
                              "updatedAt": "2019-05-22T11:48:04+00:00",
                              "deletedAt": null
                            }
                          ],
                          "vats": [
                            {
                              "id": 0,
                              "name": "string",
                              "value": 0,
                              "description": "string",
                              "isDefault": true,
                              "isHidden": true,
                              "mydataVatCat": 0,
                              "operand": "string",
                              "isPercentable": true,
                              "taxId": 0,
                              "accountingCode": null,
                              "deletedAt": null
                            }
                          ],
                          "settings": {
                            "dateFormat": "string",
                            "currency": "string",
                            "currencySymbol": "string",
                            "defaultInvoiceType": 0,
                            "defaultTemplate": "string",
                            "appLanguage": "string",
                            "multiLanguage": true,
                            "incrementingNumberLength": null,
                            "receiveReport": true,
                            "reportToEmail": null,
                            "forwardingEmail": "string",
                            "accountant": {
                              "accountantEmail": null,
                              "accountantAccess": true,
                              "accountantLoginNotification": true
                            },
                            "ocp": {
                              "receiptTypeId": 0,
                              "invoiceTypeId": 0,
                              "defaultLanguage": "string",
                              "reminderEveryDays": 0,
                              "autoSendEmail": true,
                              "disableReminder": true
                            },
                            "personalizedEmail": {
                              "fromEmailName": null,
                              "fromEmailAddress": "string",
                              "replyToEmail": null
                            }
                          },
                          "subscription": {
                            "plan": "string",
                            "startedAt": "string",
                            "expiresAt": "string",
                            "recurring": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get account details. This endpoint is quite unique since we also provide relations with information that can be \"hard\" cached and used to your requests. Id for vats, or your current Biller ID or payment methods are just some of the extra information provided. Try the end point to see the response with the payload.\n\n<!-- theme: warning -->\n> This is a super charged endpoint with data that can be used in multiple requests and can be safely cached.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "parameters": []
    },
    "customers": {
      "get": {
        "summary": "Get a list of customers",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-customers",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Testing S.A."
            },
            "in": "query",
            "name": "q",
            "description": " If you want to list customers by a search term. Lookup is on Company name, VatID, Telephone,Email."
          },
          {
            "schema": {
              "type": "boolean",
              "example": 1
            },
            "in": "query",
            "name": "unpaid",
            "description": "If you want to list only customer with unpaid invoices"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "schema": {
              "type": "string",
              "example": "24"
            },
            "in": "query",
            "name": "tagid",
            "description": "If you want to filter by a Tag, fill in the Tag ID"
          },
          {
            "$ref": "#/components/parameters/withRelations"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "description": "A list of customers",
        "security": [
          {
            "API TOKEN": []
          }
        ]
      },
      "post": {
        "summary": "Create a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 0,
                        "email": "string",
                        "inCharge": "string",
                        "info": "string",
                        "company": "string",
                        "profession": "string",
                        "vatId": "string",
                        "taxOffice": "string",
                        "streetAddress": "string",
                        "city": "string",
                        "postalCode": "string",
                        "phone": "string",
                        "mobile": "string",
                        "fax": "string",
                        "field1": null,
                        "field2": null,
                        "field3": null,
                        "field4": null,
                        "enabled": true,
                        "lang": "el",
                        "discount": 0,
                        "alias": "string",
                        "debt": 0,
                        "overflowAmount": 0,
                        "total": 0,
                        "unpaid": 0,
                        "createdAt": "2019-08-24T14:15:22Z",
                        "updatedAt": "string",
                        "deletedAt": null,
                        "country": "GR",
                        "isCompany": true,
                        "customerType": 1,
                        "publicNote": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string",
                      "minLength": 1
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "errors": {
                      "type": "object"
                    },
                    "": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "statusCode",
                    "error",
                    "message",
                    "errors"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 422,
                      "error": "Validation Failed",
                      "message": "Your input had some validation errors.",
                      "errors": {
                        "isCompany": [
                          "The is company field is required."
                        ],
                        "customerType": [
                          "The customer type field is required."
                        ],
                        "company": [
                          "The 'Company' field is required."
                        ],
                        "lang": [
                          "The 'Language' field is required."
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-customers",
        "description": "Create a customer",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "isCompany": {
                    "type": "boolean"
                  },
                  "company": {
                    "type": "string",
                    "minLength": 1
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1
                  },
                  "profession": {
                    "type": "string",
                    "minLength": 1
                  },
                  "inCharge": {
                    "type": "string",
                    "minLength": 1
                  },
                  "vatId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "taxOffice": {
                    "type": "string",
                    "minLength": 1
                  },
                  "streetAddress": {
                    "type": "string",
                    "minLength": 1
                  },
                  "alias": {
                    "type": "string",
                    "minLength": 1
                  },
                  "customerType": {
                    "type": "number"
                  },
                  "postalCode": {
                    "type": "string",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "minLength": 1
                  },
                  "addresses": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "address": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "incharge": {
                          "type": "string",
                          "minLength": 1
                        },
                        "tel": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "title",
                        "address",
                        "city",
                        "zip",
                        "incharge",
                        "tel",
                        "country"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "isCompany": true,
                    "company": "TestingCompany",
                    "lang": "el",
                    "profession": "Web Dev",
                    "inCharge": "George Tester",
                    "vatId": "EL89991223123",
                    "taxOffice": "A Athens",
                    "streetAddress": "Androutsou",
                    "alias": "Test",
                    "customerType": 1,
                    "postalCode": "12312",
                    "city": "Athens",
                    "country": "GR",
                    "addresses": [
                      {
                        "title": "Τιτλος 1",
                        "address": "Διευθυνση 1",
                        "city": "Πόλη 1",
                        "zip": "ΤΚ 1",
                        "incharge": "Γιωργος 1",
                        "tel": "210 1",
                        "country": "GR"
                      },
                      {
                        "title": "Τιτλος 2",
                        "address": "Διευθυνση 2",
                        "city": "Πόλη 2",
                        "zip": "ΤΚ 2",
                        "incharge": "Γιωργος 2",
                        "tel": "220 2",
                        "country": "GR"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "invoices": {
      "get": {
        "summary": "Invoices list",
        "tags": [
          "Invoices"
        ],
        "operationId": "get-v1-invoices",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceListItem"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get a list with your invoices"
      },
      "post": {
        "summary": "Create an invoice",
        "tags": [
          "Invoices"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-v1-invoices",
        "description": "Create a new invoice\n",
        "security": [
          {
            "API TOKEN": []
          }
        ]
      },
      "parameters": []
    },
    "invoices/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "The uuid of invoice"
        }
      ],
      "get": {
        "summary": "Show Invoice",
        "tags": [
          "Invoices"
        ],
        "operationId": "get-invoices-uuid",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Show an invoice resource. In case you need the pdf URL add \"/pdf\" in the returned \"permalink\" url and you're ready to go.x`",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "put": {
        "summary": "Update an invoice",
        "operationId": "putinvoices-uuid",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Invoices"
        ]
      },
      "delete": {
        "summary": "Delete an invoice",
        "operationId": "deleteinvoices-uuid",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Invoices"
        ]
      }
    },
    "products": {
      "get": {
        "summary": "List of products",
        "tags": [
          "Products"
        ],
        "responses": {},
        "operationId": "get-products"
      },
      "post": {
        "summary": "Create a new product",
        "tags": [
          "Products"
        ],
        "responses": {},
        "operationId": "post-products"
      },
      "parameters": []
    },
    "ocps": {
      "get": {
        "summary": "List OCP links",
        "tags": [
          "Ocp"
        ],
        "responses": {},
        "operationId": "get-ocps",
        "description": "Get a list of ocp links"
      },
      "post": {
        "summary": "Create a new OCP link",
        "tags": [
          "Ocp"
        ],
        "responses": {},
        "operationId": "post-ocps"
      },
      "parameters": []
    },
    "payments": {
      "get": {
        "summary": "List payments",
        "tags": [
          "Payments"
        ],
        "responses": {},
        "operationId": "get-payments"
      },
      "post": {
        "summary": "Create a new payment",
        "tags": [
          "Payments"
        ],
        "responses": {},
        "operationId": "post-payments"
      },
      "parameters": []
    },
    "suppliers": {
      "get": {
        "summary": "A list of suppliers",
        "tags": [
          "Suppliers"
        ],
        "responses": {},
        "operationId": "get-suppliers"
      },
      "post": {
        "summary": "Create a new supplier",
        "tags": [
          "Suppliers"
        ],
        "responses": {},
        "operationId": "post-suppliers"
      },
      "parameters": []
    },
    "suppliers/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show a supplier",
        "tags": [
          "Suppliers"
        ],
        "responses": {},
        "operationId": "get-suppliers-id"
      }
    },
    "ocps/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show an ocp link",
        "tags": [
          "Ocp"
        ],
        "responses": {},
        "operationId": "get-ocps-uuid"
      }
    },
    "tags": {
      "get": {
        "summary": "Show a tag",
        "responses": {},
        "operationId": "get-tags",
        "tags": [
          "Tags"
        ]
      },
      "parameters": []
    },
    "tags/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show a tag",
        "tags": [
          "Tags"
        ],
        "responses": {},
        "operationId": "get-tags-id"
      }
    },
    "customers/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The customer's iD"
        }
      ],
      "get": {
        "summary": "Get a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 694,
                        "email": "drakakis@fantasy.gr",
                        "inCharge": "Δρακάκης",
                        "info": "mynewinfo 123",
                        "company": "ΦΑΝΤΑΣΥ ΤΡΑΒΕΛ ΕΠΕ",
                        "profession": "ΥΠΗΡΕΣΙΕΣ ΔΙΟΡΓΑΝΩΣΗΣ ΠΕΡΙΗΓΗΣΕΩΝ (ΠΡΑΚΤΟΡΕΙΟ ΤΑΞΙΔΙΩΝ) ΓΙΑ ΟΡΓΑΝΩΜΕΝΟ ΤΟΥΡΙΣΜΟ ΑΠΟ ΤΟ ΕΞΩΤΕΡΙΚΟ",
                        "vatId": "095702357",
                        "taxOffice": "Δ΄ ΑΘΗΝΩΝΝ",
                        "streetAddress": "ΦΙΛΕΛΛΗΝΩΝ 19",
                        "city": "ΑΘΗΝΑ",
                        "postalCode": "1231",
                        "phone": "",
                        "mobile": "",
                        "fax": "",
                        "field1": "οκ",
                        "field2": null,
                        "field3": null,
                        "field4": null,
                        "enabled": true,
                        "lang": "el",
                        "discount": 10,
                        "alias": "Εσωτερικού",
                        "debt": 0,
                        "overflowAmount": 462,
                        "total": 1562.5,
                        "unpaid": 9466.16,
                        "createdAt": "2016-07-01T17:03:17+00:00",
                        "updatedAt": "2021-04-22T19:05:42+00:00",
                        "deletedAt": null,
                        "country": "GR",
                        "isCompany": null,
                        "customerType": 1,
                        "publicNote": "μια δημσια δηλωση"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "operationId": "get-customers-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Get a specific customer by ID."
      },
      "put": {
        "summary": "Update a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "put-customers-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "delete-customers-id",
        "description": "Delete a customer by ID",
        "security": [
          {
            "API TOKEN": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "",
        "x-examples": {
          "Alice Smith": {
            "id": 142,
            "firstName": "Alice",
            "lastName": "Smith",
            "email": "alice.smith@gmail.com",
            "dateOfBirth": "1997-10-31",
            "emailVerified": true,
            "signUpDate": "2019-08-24"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1997-10-31"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Set to true if the user's email has been verified."
          },
          "createDate": {
            "type": "string",
            "format": "date",
            "description": "The date that the user was created."
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "emailVerified"
        ]
      },
      "Invoice": {
        "description": "Invoice model in billit.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "uuid": "3f6f4ce1-d7fa-4a5f-996e-4979d71fb776",
            "permalink": "https://billitio.billit.local/inv/3f6f4ce1-d7fa-4a5f-996e-4979d71fb776",
            "number": 5,
            "type": {
              "id": 670,
              "name": "Τιμολόγιο Πώλησης",
              "subtitle": "",
              "note": null,
              "alias": "Τ.Π",
              "series": null
            },
            "biller": {
              "id": 223,
              "company": "BILLIT OE",
              "info": "",
              "profession": "Κατασκευη απλικασιο",
              "taxId": "801379527",
              "taxOffice": "N.Σμύρνη",
              "streetAddress": "Thoukididou 39-90",
              "city": "Αθήνα",
              "postCode": "18538",
              "phone": "2104111111, 210131313",
              "mobile": "",
              "url": "https://billit.io",
              "urlLabel": "BILLIT",
              "country": "GR",
              "freeText": "<p>Δοκιμαστικο κειμενο<br /><strong>ΑΜΚΑ</strong>: σδφασδφασδφ<br />Τηλ: 123123123</p>"
            },
            "customer": {
              "id": 694,
              "email": "drakakis@fantasy.gr",
              "company": "ΦΑΝΤΑΣΥ ΤΡΑΒΕΛ ΕΠΕ",
              "profession": "ΥΠΗΡΕΣΙΕΣ ΔΙΟΡΓΑΝΩΣΗΣ ΠΕΡΙΗΓΗΣΕΩΝ (ΠΡΑΚΤΟΡΕΙΟ ΤΑΞΙΔΙΩΝ) ΓΙΑ ΟΡΓΑΝΩΜΕΝΟ ΤΟΥΡΙΣΜΟ ΑΠΟ ΤΟ ΕΞΩΤΕΡΙΚΟ",
              "taxId": "095702357",
              "taxOffice": "Δ΄ ΑΘΗΝΩΝΝ",
              "streetAddress": "ΦΙΛΕΛΛΗΝΩΝ 19",
              "city": "ΑΘΗΝΑ",
              "country": "GR",
              "postCode": "1231",
              "phone": "",
              "mobile": "",
              "isCompany": true,
              "field1": "οκ",
              "field2": null,
              "field3": null,
              "field4": null
            },
            "items": [
              {
                "quantity": 4,
                "measurementUnitId": 1,
                "product": {
                  "id": 24,
                  "title": "Billit Pro",
                  "description": ""
                },
                "netAmount": 19.9,
                "vatAmount": 17.19,
                "totalAmount": 71.64,
                "discountPercent": 10,
                "discountAmount": 7.959999999999994,
                "undiscountedTotalAmount": 79.6,
                "vatId": 376,
                "vatPercent": 24,
                "mydata": {
                  "vatCat": null,
                  "vatExemptionCat": null,
                  "dienergia": null,
                  "discountOption": null,
                  "withheldAmount": null,
                  "withheldPercentCat": null,
                  "stampDutyAmount": null,
                  "stampDutyPercent_cat": null,
                  "feesAmount": null,
                  "feesPercentCat": null,
                  "otherTaxesAmount": null,
                  "otherTaxesPercent_cat": null,
                  "deductionsAmount": null,
                  "lineComments": null,
                  "incomeClassificationType": [
                    {
                      "id": 1,
                      "type": "E3_561_001",
                      "amount": 71.64,
                      "category": "category1_1"
                    }
                  ],
                  "expensesClassificationType": null,
                  "rowType": null
                }
              }
            ],
            "note": "μια δημσια δηλωση",
            "amount": 71.64,
            "vatAmount": 17.19,
            "finalAmount": 88.83,
            "payableAmount": 88.83,
            "discountedAmount": 7.96,
            "restAmount": 88.83,
            "isPaid": false,
            "layoutLang": "GR",
            "paymentMethodIds": [
              "null"
            ],
            "templateId": 0,
            "hideItemNum": false,
            "isRecurring": false,
            "isSend": false,
            "isRead": false,
            "dateIssued": "2021-04-08",
            "dateExpires": null,
            "dateRead": null,
            "createdAt": "2021-04-08T09:50:38+00:00",
            "updatedAt": "2021-04-11T18:08:15+00:00",
            "deletedAt": null,
            "tags": [],
            "isMydataEnabled": true,
            "mydata": {
              "type": "1.1",
              "state": 1,
              "errors": null,
              "branch": 0,
              "invoiceUid": null,
              "invoiceMark": null,
              "transmissionFailure": null,
              "selfPricing": null,
              "classificationMark": null,
              "authenticationCode": null,
              "canceledByMark": null,
              "incomeClassification": null,
              "expenseClassification": null,
              "dienergia": null,
              "mydataPaymentType": [
                {
                  "type": 3,
                  "amount": 1,
                  "paymentMethodInfo": ""
                },
                {
                  "type": 4,
                  "amount": 2,
                  "paymentMethodInfo": ""
                },
                {
                  "type": 5,
                  "amount": 85.83,
                  "paymentMethodInfo": ""
                }
              ]
            },
            "dispatchDate": null,
            "dispatchTime": null,
            "vehicleNumber": null,
            "movePurpose": null,
            "loadingPlace": null,
            "destination": null,
            "correlatedInvoices": [],
            "taxTotals": [],
            "totalWithheldAmount": 0,
            "totalFeesAmount": 0,
            "totalStampDutyAmount": 0,
            "totalOtherTaxesAmount": 0,
            "totalDeductionsAmount": 0,
            "vatList": null,
            "offlinePaymentMethods": [
              {
                "label": "Μετρητά",
                "value": "<p>Πληρωμή στην έδρα της επιχείρησης</p>"
              }
            ],
            "onlinePaymentMethods": [
              {
                "id": 482,
                "name": "Τραπεζα Πειραιώς [online]",
                "gatewayId": 5
              },
              {
                "id": 483,
                "name": "BrainTree [online]",
                "gatewayId": 3
              },
              {
                "id": 491,
                "name": "Paypal [online]",
                "gatewayId": 2
              }
            ],
            "templateExtras": {
              "logo": "https://app.billit.local/uploads/logos/92/billit-other.png",
              "templateName": "minimal-2020",
              "multiLang": 1,
              "dateFormat": "d-m-Y",
              "currency": "EUR",
              "currencySymbol": "€",
              "currencyPos": 1,
              "customerDept": false,
              "allowPayments": 0,
              "hideTmx": false,
              "hideReceiver": false,
              "hidePricing": false,
              "showBalance": false,
              "hasSigningbox": false,
              "extraFieldsLabels": [
                "test"
              ]
            }
          }
        },
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 1
          },
          "permalink": {
            "type": "string",
            "minLength": 1
          },
          "number": {
            "type": "number"
          },
          "type": {
            "type": "object",
            "required": [
              "id",
              "name",
              "subtitle",
              "alias"
            ],
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string",
                "minLength": 1
              },
              "subtitle": {
                "type": "string"
              },
              "note": {},
              "alias": {
                "type": "string",
                "minLength": 1
              },
              "series": {}
            }
          },
          "biller": {
            "type": "object",
            "required": [
              "id",
              "company",
              "info",
              "profession",
              "taxId",
              "taxOffice",
              "streetAddress",
              "city",
              "postCode",
              "phone",
              "mobile",
              "url",
              "urlLabel",
              "country",
              "freeText"
            ],
            "properties": {
              "id": {
                "type": "number"
              },
              "company": {
                "type": "string",
                "minLength": 1
              },
              "info": {
                "type": "string"
              },
              "profession": {
                "type": "string",
                "minLength": 1
              },
              "taxId": {
                "type": "string",
                "minLength": 1
              },
              "taxOffice": {
                "type": "string",
                "minLength": 1
              },
              "streetAddress": {
                "type": "string",
                "minLength": 1
              },
              "city": {
                "type": "string",
                "minLength": 1
              },
              "postCode": {
                "type": "string",
                "minLength": 1
              },
              "phone": {
                "type": "string",
                "minLength": 1
              },
              "mobile": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "minLength": 1
              },
              "urlLabel": {
                "type": "string",
                "minLength": 1
              },
              "country": {
                "type": "string",
                "minLength": 1
              },
              "freeText": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "customer": {
            "type": "object",
            "required": [
              "id",
              "email",
              "company",
              "profession",
              "taxId",
              "taxOffice",
              "streetAddress",
              "city",
              "country",
              "postCode",
              "phone",
              "mobile",
              "isCompany",
              "field1"
            ],
            "properties": {
              "id": {
                "type": "number"
              },
              "email": {
                "type": "string",
                "minLength": 1
              },
              "company": {
                "type": "string",
                "minLength": 1
              },
              "profession": {
                "type": "string",
                "minLength": 1
              },
              "taxId": {
                "type": "string",
                "minLength": 1
              },
              "taxOffice": {
                "type": "string",
                "minLength": 1
              },
              "streetAddress": {
                "type": "string",
                "minLength": 1
              },
              "city": {
                "type": "string",
                "minLength": 1
              },
              "country": {
                "type": "string",
                "minLength": 1
              },
              "postCode": {
                "type": "string",
                "minLength": 1
              },
              "phone": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "isCompany": {
                "type": "boolean"
              },
              "field1": {
                "type": "string",
                "minLength": 1
              },
              "field2": {},
              "field3": {},
              "field4": {}
            }
          },
          "items": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                },
                "measurementUnitId": {
                  "type": "number"
                },
                "product": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "title": {
                      "type": "string",
                      "minLength": 1
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "description"
                  ]
                },
                "netAmount": {
                  "type": "number"
                },
                "vatAmount": {
                  "type": "number"
                },
                "totalAmount": {
                  "type": "number"
                },
                "discountPercent": {
                  "type": "number"
                },
                "discountAmount": {
                  "type": "number"
                },
                "undiscountedTotalAmount": {
                  "type": "number"
                },
                "vatId": {
                  "type": "number"
                },
                "vatPercent": {
                  "type": "number"
                },
                "mydata": {
                  "type": "object",
                  "properties": {
                    "vatCat": {},
                    "vatExemptionCat": {},
                    "dienergia": {},
                    "discountOption": {},
                    "withheldAmount": {},
                    "withheldPercentCat": {},
                    "stampDutyAmount": {},
                    "stampDutyPercent_cat": {},
                    "feesAmount": {},
                    "feesPercentCat": {},
                    "otherTaxesAmount": {},
                    "otherTaxesPercent_cat": {},
                    "deductionsAmount": {},
                    "lineComments": {},
                    "incomeClassificationType": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "amount": {
                            "type": "number"
                          },
                          "category": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "amount",
                          "category"
                        ]
                      }
                    },
                    "expensesClassificationType": {},
                    "rowType": {}
                  },
                  "required": [
                    "incomeClassificationType"
                  ]
                }
              },
              "required": [
                "quantity",
                "measurementUnitId",
                "netAmount",
                "vatAmount",
                "totalAmount",
                "discountPercent",
                "discountAmount",
                "undiscountedTotalAmount",
                "vatId",
                "vatPercent"
              ]
            }
          },
          "note": {
            "type": "string",
            "minLength": 1
          },
          "amount": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "finalAmount": {
            "type": "number"
          },
          "payableAmount": {
            "type": "number"
          },
          "discountedAmount": {
            "type": "number"
          },
          "restAmount": {
            "type": "number"
          },
          "isPaid": {
            "type": "boolean"
          },
          "layoutLang": {
            "type": "string",
            "minLength": 1
          },
          "paymentMethodIds": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "templateId": {
            "type": "number"
          },
          "hideItemNum": {
            "type": "boolean"
          },
          "isRecurring": {
            "type": "boolean"
          },
          "isSend": {
            "type": "boolean"
          },
          "isRead": {
            "type": "boolean"
          },
          "dateIssued": {
            "type": "string",
            "minLength": 1
          },
          "dateExpires": {},
          "dateRead": {},
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "deletedAt": {},
          "tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "isMydataEnabled": {
            "type": "boolean"
          },
          "mydata": {
            "type": "object",
            "required": [
              "type",
              "state",
              "branch",
              "mydataPaymentType"
            ],
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1
              },
              "state": {
                "type": "number"
              },
              "errors": {},
              "branch": {
                "type": "number"
              },
              "invoiceUid": {},
              "invoiceMark": {},
              "transmissionFailure": {},
              "selfPricing": {},
              "classificationMark": {},
              "authenticationCode": {},
              "canceledByMark": {},
              "incomeClassification": {},
              "expenseClassification": {},
              "dienergia": {},
              "mydataPaymentType": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "paymentMethodInfo": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "amount",
                    "paymentMethodInfo"
                  ]
                }
              }
            }
          },
          "dispatchDate": {},
          "dispatchTime": {},
          "vehicleNumber": {},
          "movePurpose": {},
          "loadingPlace": {},
          "destination": {},
          "correlatedInvoices": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "taxTotals": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "totalWithheldAmount": {
            "type": "number"
          },
          "totalFeesAmount": {
            "type": "number"
          },
          "totalStampDutyAmount": {
            "type": "number"
          },
          "totalOtherTaxesAmount": {
            "type": "number"
          },
          "totalDeductionsAmount": {
            "type": "number"
          },
          "vatList": {},
          "offlinePaymentMethods": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "minLength": 1
                },
                "value": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "label",
                "value"
              ]
            }
          },
          "onlinePaymentMethods": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "gatewayId": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "name",
                "gatewayId"
              ]
            }
          },
          "templateExtras": {
            "type": "object",
            "required": [
              "logo",
              "templateName",
              "multiLang",
              "dateFormat",
              "currency",
              "currencySymbol",
              "currencyPos",
              "customerDept",
              "allowPayments",
              "hideTmx",
              "hideReceiver",
              "hidePricing",
              "showBalance",
              "hasSigningbox",
              "extraFieldsLabels"
            ],
            "properties": {
              "logo": {
                "type": "string",
                "minLength": 1
              },
              "templateName": {
                "type": "string",
                "minLength": 1
              },
              "multiLang": {
                "type": "number"
              },
              "dateFormat": {
                "type": "string",
                "minLength": 1
              },
              "currency": {
                "type": "string",
                "minLength": 1
              },
              "currencySymbol": {
                "type": "string",
                "minLength": 1
              },
              "currencyPos": {
                "type": "number"
              },
              "customerDept": {
                "type": "boolean"
              },
              "allowPayments": {
                "type": "number"
              },
              "hideTmx": {
                "type": "boolean"
              },
              "hideReceiver": {
                "type": "boolean"
              },
              "hidePricing": {
                "type": "boolean"
              },
              "showBalance": {
                "type": "boolean"
              },
              "hasSigningbox": {
                "type": "boolean"
              },
              "extraFieldsLabels": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        },
        "required": [
          "uuid",
          "type",
          "biller",
          "customer",
          "items",
          "note",
          "amount",
          "vatAmount",
          "finalAmount",
          "payableAmount",
          "discountedAmount",
          "restAmount",
          "isPaid",
          "layoutLang",
          "paymentMethodIds",
          "templateId",
          "hideItemNum",
          "isRecurring",
          "isSend",
          "isRead",
          "dateIssued",
          "createdAt",
          "updatedAt",
          "tags",
          "isMydataEnabled",
          "mydata",
          "correlatedInvoices",
          "taxTotals",
          "totalWithheldAmount",
          "totalFeesAmount",
          "totalStampDutyAmount",
          "totalOtherTaxesAmount",
          "totalDeductionsAmount",
          "offlinePaymentMethods",
          "onlinePaymentMethods",
          "templateExtras"
        ]
      },
      "Links": {
        "description": "",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "minLength": 1
          },
          "last": {
            "type": "string",
            "minLength": 1
          },
          "prev": {},
          "next": {
            "type": "string",
            "minLength": 1
          }
        },
        "title": "links"
      },
      "Meta": {
        "description": "",
        "type": "object",
        "properties": {
          "current_page": {
            "type": "number"
          },
          "from": {
            "type": "number"
          },
          "last_page": {
            "type": "number"
          },
          "links": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "url": {},
                "label": {
                  "type": "string",
                  "minLength": 1
                },
                "active": {
                  "type": "boolean"
                }
              }
            }
          },
          "path": {
            "type": "string",
            "minLength": 1
          },
          "per_page": {
            "type": "number"
          },
          "to": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "InvoiceListItem": {
        "description": "",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 1,
            "readOnly": true
          },
          "billerId": {
            "type": "number"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "email": {
                "type": "string",
                "minLength": 1
              },
              "company": {
                "type": "string",
                "minLength": 1
              },
              "isCompany": {
                "type": "boolean"
              }
            }
          },
          "number": {
            "type": "number"
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string",
                "minLength": 1
              },
              "alias": {},
              "series": {}
            }
          },
          "note": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "finalAmount": {
            "type": "number"
          },
          "payableAmount": {
            "type": "number"
          },
          "restAmount": {
            "type": "number"
          },
          "isPaid": {
            "type": "boolean"
          },
          "layoutLang": {
            "type": "string",
            "minLength": 1
          },
          "discount": {
            "type": "number"
          },
          "paymentMethodIds": {},
          "templateId": {
            "type": "number"
          },
          "hideItemNum": {
            "type": "boolean"
          },
          "isRecurring": {
            "type": "boolean"
          },
          "isSend": {
            "type": "boolean"
          },
          "isRead": {
            "type": "boolean"
          },
          "dateIssued": {
            "type": "string",
            "minLength": 1
          },
          "dateExpires": {},
          "dateRead": {},
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time"
          },
          "deletedAt": {},
          "isMydataEnabled": {
            "type": "boolean"
          },
          "correlatedInvoices": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "permalink": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          }
        }
      },
      "Customer": {
        "description": "",
        "type": "object",
        "title": "",
        "properties": {
          "id": {
            "type": "number",
            "description": "Customer's Unique Identifier",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address. Mandatory if you're using the \"send invoice by email\" feature."
          },
          "inCharge": {
            "type": "string",
            "description": "Full name of person in charge"
          },
          "info": {
            "type": "string",
            "description": "Private note for customer"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "profession": {
            "type": "string",
            "description": "Company's field/profession. Applicable in some countries"
          },
          "vatId": {
            "type": "string",
            "description": "Company's VatID"
          },
          "taxOffice": {
            "type": "string",
            "description": "Tax Office"
          },
          "streetAddress": {
            "type": "string",
            "description": "The physical address of the company"
          },
          "city": {
            "type": "string",
            "description": "The city that the company is located"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code"
          },
          "phone": {
            "type": "string",
            "description": "The company's telephone"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "field1": {
            "type": [
              "string",
              "null"
            ],
            "description": "Custom field 1"
          },
          "field2": {
            "type": [
              "string",
              "null"
            ],
            "description": "Custom field 2"
          },
          "field3": {
            "type": [
              "string",
              "null"
            ],
            "description": "Custom field 3"
          },
          "field4": {
            "type": [
              "string",
              "null"
            ],
            "description": "Custom field 4"
          },
          "enabled": {
            "type": "boolean",
            "description": "Is customer enabled?"
          },
          "lang": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "el",
              "en"
            ],
            "description": "Choose the language you want the customer to receive his invoices."
          },
          "discount": {
            "type": "number",
            "description": "Pre select a discount percentage each time you create an invoice for this customer"
          },
          "alias": {
            "type": "string",
            "minLength": 1,
            "description": "A friendly short name that you identify the customer."
          },
          "debt": {
            "type": "number",
            "description": "Previous debt/balance of customer, before inserting him in the app."
          },
          "overflowAmount": {
            "type": "number",
            "description": "Overflow amount of account",
            "readOnly": true
          },
          "total": {
            "type": "number",
            "description": "Customer's total balance",
            "readOnly": true
          },
          "unpaid": {
            "type": "number",
            "description": "Customer unpaid amount "
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "ISO 8601 format"
          },
          "country": {
            "type": "string",
            "example": "GR",
            "description": "ISO 3166-1 alpha-2 code",
            "minLength": 2,
            "maxLength": 2
          },
          "isCompany": {
            "type": "boolean",
            "description": "Customer is a company or an individual"
          },
          "customerType": {
            "type": "number",
            "enum": [
              1,
              2,
              3
            ],
            "description": "1 - Local, 2 - EU(VIES), 3 - Abroad"
          },
          "publicNote": {
            "type": "string",
            "minLength": 1,
            "description": "This note will be publicly available in the \"notes\" section of an invoice"
          }
        },
        "required": [
          "id",
          "country",
          "customerType"
        ]
      },
      "Biller": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Biller's unique ID",
            "readOnly": true
          },
          "company": {
            "type": "string",
            "description": "Biller's name / company"
          },
          "companySec": {
            "type": "string",
            "minLength": 1,
            "description": "Biller name in secondary language"
          },
          "profession": {
            "type": "string",
            "minLength": 1,
            "description": "Biller Profession"
          },
          "professionSec": {
            "type": "string",
            "minLength": 1,
            "description": "Biller profession in secondary language"
          },
          "vatId": {
            "type": "string",
            "description": "Biller's vat ID",
            "minLength": 9
          },
          "taxOffice": {
            "type": "string",
            "minLength": 1,
            "description": "Biller's tax office"
          },
          "streetAddress": {
            "type": "string",
            "minLength": 1,
            "description": "The physical street address"
          },
          "streetAddressSec": {
            "type": "string",
            "minLength": 1,
            "description": "The physical street address in secondary language"
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "description": "Biller's city"
          },
          "citySec": {
            "type": "string",
            "minLength": 1,
            "description": "Biller's city in secondary language"
          },
          "postalCode": {
            "type": "string",
            "minLength": 1,
            "description": "Postal code"
          },
          "phone": {
            "type": "string",
            "minLength": 1,
            "description": "Phone number"
          },
          "phoneSec": {
            "type": "string",
            "minLength": 1,
            "description": "Phone number in secodary language"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone number"
          },
          "mobileSec": {
            "type": "string",
            "minLength": 1,
            "description": "Mobile phone number in secondary language"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "logo": {
            "type": "string",
            "minLength": 1,
            "description": "The full URL of the biller's logo"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "description": "Full url of the Biller's website"
          },
          "urlSec": {
            "type": "string",
            "minLength": 1,
            "description": "Full url of the Biller's website in secondary language"
          },
          "urlLabel": {
            "type": "string",
            "minLength": 1,
            "description": "A friendly name for website"
          },
          "country": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 3166-1 alpha-2 code"
          },
          "freeText": {
            "type": "string",
            "minLength": 1,
            "description": "Html block with extra info"
          },
          "freeTextSec": {
            "type": "string",
            "minLength": 1,
            "description": "Html block with extra info in secondary language"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          }
        },
        "required": [
          "company",
          "vatId",
          "postalCode",
          "country"
        ]
      },
      "Payment": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "invoiceId": {
            "type": "number"
          },
          "paymentMethodId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "info": {
            "type": "string"
          },
          "transactionId": {},
          "apptransactionId": {},
          "customerId": {
            "type": "number"
          },
          "paidInvoices": {},
          "overflowAmount": {
            "type": "number"
          },
          "dateOccurred": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          }
        },
        "x-examples": {
          "example": {
            "id": 994,
            "invoiceId": 1181,
            "paymentMethodId": 483,
            "amount": 123,
            "info": "",
            "transactionId": null,
            "apptransactionId": null,
            "customerId": 694,
            "paidInvoices": null,
            "overflowAmount": 0,
            "dateOccurred": "2021-01-04T00:00:00+00:00",
            "createdAt": "2021-01-04T08:48:01+00:00",
            "updatedAt": "2021-01-04T08:48:01+00:00"
          }
        }
      },
      "Supplier": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "company": {
            "type": "string",
            "minLength": 1
          },
          "info": {
            "type": "string"
          },
          "object": {
            "type": "string"
          },
          "vatId": {
            "type": "string",
            "minLength": 1
          },
          "taxOffice": {
            "type": "string",
            "minLength": 1
          },
          "streetAddress": {
            "type": "string",
            "minLength": 1
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "minLength": 1
          },
          "country": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "deletedAt": {}
        }
      },
      "Ocp": {
        "description": "",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 1
          },
          "customerId": {
            "type": "number"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "productId": {},
          "returnUrl": {
            "type": "string"
          },
          "paymentmethodId": {
            "type": "number"
          },
          "cost": {
            "type": "number"
          },
          "vatId": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          },
          "invoiceTypeId": {
            "type": "number"
          },
          "cleanCost": {
            "type": "number"
          },
          "locale": {
            "type": "string",
            "minLength": 1
          },
          "wasSend": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "sales": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "expirationAt": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "deletedAt": {}
        },
        "x-examples": {
          "example": {
            "id": 994,
            "invoiceId": 1181,
            "paymentMethodId": 483,
            "amount": 123,
            "info": "",
            "transactionId": null,
            "apptransactionId": null,
            "customerId": 694,
            "paidInvoices": null,
            "overflowAmount": 0,
            "dateOccurred": "2021-01-04T00:00:00+00:00",
            "createdAt": "2021-01-04T08:48:01+00:00",
            "updatedAt": "2021-01-04T08:48:01+00:00"
          }
        }
      },
      "Tag": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "tag": {
            "type": "string",
            "minLength": 1
          },
          "description": {}
        },
        "required": [
          "id",
          "tag"
        ]
      },
      "Product": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "nameSec": {
            "type": "string"
          },
          "descriptionSec": {
            "type": "string"
          },
          "unitPrice": {
            "type": "number"
          },
          "defaultVatId": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          },
          "withStock": {
            "type": "boolean"
          },
          "isVatIncluded": {
            "type": "boolean"
          },
          "ordering": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "bulkjobId": {},
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "deletedAt": {}
        },
        "x-examples": {
          "example": {
            "id": 838,
            "info": "",
            "supplierId": 647,
            "price": 66.92,
            "vatAmount": 15.39,
            "irsAmount": 66.92,
            "invoiceNum": "1111",
            "taxOffice": null,
            "streetAddress": null,
            "companyExpense": true,
            "isCredited": false,
            "paid": false,
            "irsType": 1,
            "irsPercent": null,
            "receiptId": null,
            "originalPrice": null,
            "originalVat": null,
            "originalCurrency": null,
            "systemCurrency": null,
            "rate": null,
            "dateOccurred": "2018-11-02",
            "datePaid": "2021-04-19",
            "createdAt": "2018-11-21T14:56:03+00:00",
            "updatedAt": "2019-08-08T17:26:53+00:00"
          }
        }
      },
      "Purchase": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "info": {
            "type": "string"
          },
          "supplierId": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "irsAmount": {
            "type": "number"
          },
          "invoiceNum": {
            "type": "string",
            "minLength": 1
          },
          "taxOffice": {},
          "streetAddress": {},
          "companyExpense": {
            "type": "boolean"
          },
          "isCredited": {
            "type": "boolean"
          },
          "paid": {
            "type": "boolean"
          },
          "irsType": {
            "type": "number"
          },
          "irsPercent": {},
          "receiptId": {},
          "originalPrice": {},
          "originalVat": {},
          "originalCurrency": {},
          "systemCurrency": {},
          "rate": {},
          "dateOccurred": {
            "type": "string",
            "minLength": 1
          },
          "datePaid": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          }
        },
        "x-examples": {
          "example": {
            "id": 838,
            "info": "",
            "supplierId": 647,
            "price": 66.92,
            "vatAmount": 15.39,
            "irsAmount": 66.92,
            "invoiceNum": "1111",
            "taxOffice": null,
            "streetAddress": null,
            "companyExpense": true,
            "isCredited": false,
            "paid": false,
            "irsType": 1,
            "irsPercent": null,
            "receiptId": null,
            "originalPrice": null,
            "originalVat": null,
            "originalCurrency": null,
            "systemCurrency": null,
            "rate": null,
            "dateOccurred": "2018-11-02",
            "datePaid": "2021-04-19",
            "createdAt": "2018-11-21T14:56:03+00:00",
            "updatedAt": "2019-08-08T17:26:53+00:00"
          }
        }
      },
      "Paymentmethod": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "nameSec": {},
          "info": {},
          "infoSec": {},
          "isOnlineMethod": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "iban": {},
          "bic": {},
          "accountHolder": {},
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "deletedAt": {}
        },
        "required": [
          "id",
          "name",
          "isOnlineMethod",
          "status",
          "default",
          "createdAt",
          "updatedAt"
        ]
      },
      "Vat": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "number"
          },
          "description": {},
          "isDefault": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          },
          "mydataVatCat": {
            "type": "number"
          },
          "operand": {
            "type": "string",
            "minLength": 1
          },
          "isPercentable": {
            "type": "boolean"
          },
          "taxId": {
            "type": "number"
          },
          "accountingCode": {},
          "deletedAt": {}
        },
        "required": [
          "id",
          "name",
          "value",
          "isDefault",
          "isHidden",
          "mydataVatCat",
          "operand",
          "isPercentable",
          "taxId"
        ]
      },
      "Setting": {
        "description": "",
        "type": "object",
        "properties": {
          "dateFormat": {
            "type": "string",
            "minLength": 1
          },
          "currency": {
            "type": "string",
            "minLength": 1
          },
          "currencySymbol": {
            "type": "string",
            "minLength": 1
          },
          "defaultInvoiceType": {
            "type": "number"
          },
          "defaultTemplate": {
            "type": "string",
            "minLength": 1
          },
          "appLanguage": {
            "type": "string",
            "minLength": 1
          },
          "multiLanguage": {
            "type": "boolean"
          },
          "incrementingNumberLength": {},
          "receiveReport": {
            "type": "boolean"
          },
          "reportToEmail": {},
          "forwardingEmail": {
            "type": "string",
            "minLength": 1
          },
          "accountant": {
            "type": "object",
            "properties": {
              "accountantEmail": {},
              "accountantAccess": {
                "type": "boolean"
              },
              "accountantLoginNotification": {
                "type": "boolean"
              }
            },
            "required": [
              "accountantAccess",
              "accountantLoginNotification"
            ]
          },
          "ocp": {
            "type": "object",
            "properties": {
              "receiptTypeId": {
                "type": "number"
              },
              "invoiceTypeId": {
                "type": "number"
              },
              "defaultLanguage": {
                "type": "string",
                "minLength": 1
              },
              "reminderEveryDays": {
                "type": "number"
              },
              "autoSendEmail": {
                "type": "boolean"
              },
              "disableReminder": {
                "type": "boolean"
              }
            },
            "required": [
              "receiptTypeId",
              "invoiceTypeId",
              "defaultLanguage",
              "reminderEveryDays",
              "autoSendEmail",
              "disableReminder"
            ]
          },
          "personalizedEmail": {
            "type": "object",
            "properties": {
              "fromEmailName": {},
              "fromEmailAddress": {
                "type": "string",
                "minLength": 1
              },
              "replyToEmail": {}
            },
            "required": [
              "fromEmailAddress"
            ]
          }
        },
        "required": [
          "dateFormat",
          "currency",
          "currencySymbol",
          "defaultInvoiceType",
          "defaultTemplate",
          "appLanguage",
          "multiLanguage",
          "receiveReport",
          "forwardingEmail",
          "accountant",
          "ocp",
          "personalizedEmail"
        ]
      },
      "Subscription": {
        "description": "",
        "type": "object",
        "properties": {
          "plan": {
            "type": "string",
            "minLength": 1
          },
          "startedAt": {
            "type": "string",
            "minLength": 1
          },
          "expiresAt": {
            "type": "string",
            "minLength": 1
          },
          "recurring": {
            "type": "boolean"
          }
        },
        "required": [
          "plan",
          "startedAt",
          "expiresAt",
          "recurring"
        ]
      }
    },
    "securitySchemes": {
      "API TOKEN": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "Put your API token"
      }
    },
    "parameters": {
      "Accept": {
        "name": "Accept",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "application/json"
      },
      "Content-type": {
        "name": "Content-Type",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "application/json"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "100"
        },
        "description": "Set the results per page limit. Default is 25."
      },
      "withRelations": {
        "name": "withRelations",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1"
        },
        "description": "If you want to load model relationships as well with one call."
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "readOnly": true
                },
                "error": {
                  "type": "string",
                  "minLength": 1,
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "minLength": 1,
                  "readOnly": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "insidentId": {
                      "type": "string",
                      "minLength": 1,
                      "readOnly": true
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "Logged so the Admin can take a look.",
                  "data": {
                    "insidentId": "eb9ff5d5-ee3c-4c24-937b-95644c8db839"
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Page Not found",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 404,
                  "error": "Not found",
                  "message": "",
                  "data": []
                }
              }
            }
          }
        }
      },
      "405": {
        "description": "Method not supported",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 405,
                  "error": "Not supported",
                  "message": "This method is not supported",
                  "data": []
                }
              }
            }
          }
        }
      },
      "422": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "errors": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 422,
                  "error": "Validation Failed",
                  "message": "Your input had some validation errors.",
                  "errors": {
                    "isCompany": [
                      "The is company field is required."
                    ],
                    "customerType": [
                      "The customer type field is required."
                    ],
                    "company": [
                      "The 'Company' field is required."
                    ],
                    "lang": [
                      "The 'Language' field is required."
                    ]
                  }
                }
              }
            }
          },
          "json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "errors": {
                  "type": "object"
                }
              },
              "required": [
                "statusCode",
                "error",
                "message",
                "errors"
              ]
            },
            "examples": {
              "example": {
                "value": "{\n    \"statusCode\": 422,\n    \"error\": \"Validation Failed\",\n    \"message\": \"Your input had some validation errors.\",\n    \"errors\": {\n        \"isCompany\": [\n            \"The is company field is required.\"\n        ],\n        \"customerType\": [\n            \"The customer type field is required.\"\n        ],\n        \"company\": [\n            \"The 'Company' field is required.\"\n        ],\n        \"lang\": [\n            \"The 'Language' field is required.\"\n        ]\n    }\n}"
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "insidentId": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 500,
                  "error": "Unfortunate Server error",
                  "message": "",
                  "data": {
                    "insidentId": "1d5c6a8b-113d-40ff-9635-578d5cd02486"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "API Key - 1": []
    }
  ]
}