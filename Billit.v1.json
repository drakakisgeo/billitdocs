{
  "openapi": "3.0.0",
  "info": {
    "title": "Billit",
    "version": "1.0.0",
    "description": "This is the Billit API. Feel free to test our endpoints with the provided Sandbox account first. Play safe! \n\n<!-- theme: warning -->\n> As an extra step of security by default you're assigned read only access to resources in Production mode. **Please contact us when you're ready for production** and we will give you full access the same day.\n\n<!-- theme: danger -->\n> In Sandbox environment all data are wiped out each month.",
    "contact": {
      "name": "BILLIT G.P.",
      "url": "https://billit.io/contact",
      "email": "support@billit.io"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.sandbox-billit.xyz/v1",
      "description": "Sandbox"
    },
    {
      "description": "Production",
      "url": "https://api.billit.io/v1"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "summary": "My Account",
        "operationId": "get-user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Unique identifier"
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "description": "User's email"
                        },
                        "subdomain": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The account's subdomain."
                        },
                        "firstName": {
                          "type": "string",
                          "minLength": 1,
                          "description": "First name"
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Last name"
                        },
                        "mobile": {
                          "type": "string",
                          "description": "Mobile phone number"
                        },
                        "isBlocked": {
                          "type": "boolean",
                          "description": "If account is blocked by admin"
                        },
                        "isSuspended": {
                          "type": "boolean",
                          "description": "If acccount is suspended because it's more than 60 days in frozen plan"
                        },
                        "isAccountant": {
                          "type": "boolean",
                          "description": "If the account user is an accountant"
                        },
                        "isValidated2fa": {
                          "type": "boolean",
                          "description": "If 2FA is enabled"
                        },
                        "createdAt": {
                          "type": "string",
                          "minLength": 1,
                          "description": "ISO 8601 format"
                        },
                        "updatedAt": {
                          "type": "string",
                          "minLength": 1,
                          "description": "ISO 8601 format"
                        },
                        "deletedAt": {
                          "type": [
                            "string"
                          ],
                          "description": "ISO 8601 format",
                          "nullable": true
                        },
                        "relations": {
                          "type": "object",
                          "properties": {
                            "biller": {
                              "$ref": "#/components/schemas/Biller"
                            },
                            "paymentMethods": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "$ref": "#/components/schemas/Paymentmethod"
                              },
                              "readOnly": true
                            },
                            "vats": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "$ref": "#/components/schemas/Vat"
                              },
                              "readOnly": true
                            },
                            "settings": {
                              "$ref": "#/components/schemas/Setting"
                            },
                            "subscription": {
                              "$ref": "#/components/schemas/Subscription"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": {
                        "uuid": "b3cce081-6796-409a-ace6-f7cf7bfc4771",
                        "email": "example@billit.io",
                        "subdomain": "example",
                        "firstName": "John",
                        "lastName": "Doe",
                        "mobile": "6978787878",
                        "isBlocked": true,
                        "isSuspended": true,
                        "isExpired": true,
                        "isAccountant": true,
                        "isValidated2fa": true,
                        "createdAt": "2020-09-03T13:44:48+00:00",
                        "updatedAt": "2020-09-03T13:44:48+00:00",
                        "deletedAt": null,
                        "relations": {
                          "biller": {
                            "id": 0,
                            "company": "Mπαμπουλίδης O.E.",
                            "companySec": "Mpampoulidis G.P.",
                            "profession": "Υπηρεσίες δοκιμών",
                            "professionSec": "testing services",
                            "vatId": "075656565",
                            "taxOffice": "Α' Πειραιά",
                            "streetAddress": "Τσαμαδού 10-12",
                            "streetAddressSec": "Tsamadou 10-12 str.",
                            "city": "Πειραιάς",
                            "citySec": "Piraeus",
                            "postalCode": "18534",
                            "phone": "2104111111",
                            "phoneSec": "+302104111111",
                            "mobile": "6978787878",
                            "mobileSec": "+306978787878",
                            "fax": "2104111112",
                            "logo": "https://api.billit.io/uploads/logos/92/mpampoulidis-logo.png",
                            "url": "https://test.mpampoulidis.gr",
                            "urlSec": "https://test.mpampoulidis.gr/en",
                            "urlLabel": "Mpampoulidis site",
                            "country": "GR",
                            "freeText": "<p>ΓΕ.ΜΗ: 123123</p>",
                            "freeTextSec": "<p>GEMI: 123123</p>",
                            "createdAt": "2021-04-24T14:15:22Z",
                            "updatedAt": "2021-04-24T14:15:22Z"
                          },
                          "paymentMethods": [
                            {
                              "id": 292,
                              "name": "Εθνική Τράπεζα",
                              "nameSec": "NBG BANK",
                              "info": null,
                              "infoSec": null,
                              "isOnlineMethod": false,
                              "status": true,
                              "default": true,
                              "iban": "1231231231313141414141414141",
                              "bic": "NBG10GD",
                              "accountHolder": "Μπαμπουλίδης Ο.Ε.",
                              "createdAt": "2019-05-22T11:48:04+00:00",
                              "updatedAt": "2019-05-22T11:48:04+00:00",
                              "deletedAt": null
                            }
                          ],
                          "vats": [
                            {
                              "id": 0,
                              "name": "string",
                              "value": 0,
                              "description": "string",
                              "isDefault": true,
                              "isHidden": true,
                              "mydataVatCat": 0,
                              "operand": "string",
                              "isPercentable": true,
                              "taxId": 0,
                              "accountingCode": null,
                              "deletedAt": null
                            }
                          ],
                          "settings": {
                            "dateFormat": "string",
                            "currency": "string",
                            "currencySymbol": "string",
                            "defaultInvoiceType": 0,
                            "defaultTemplate": "string",
                            "appLanguage": "string",
                            "multiLanguage": true,
                            "incrementingNumberLength": null,
                            "receiveReport": true,
                            "reportToEmail": null,
                            "forwardingEmail": "string",
                            "accountant": {
                              "accountantEmail": null,
                              "accountantAccess": true,
                              "accountantLoginNotification": true
                            },
                            "ocp": {
                              "receiptTypeId": 0,
                              "invoiceTypeId": 0,
                              "defaultLanguage": "string",
                              "reminderEveryDays": 0,
                              "autoSendEmail": true,
                              "disableReminder": true
                            },
                            "personalizedEmail": {
                              "fromEmailName": null,
                              "fromEmailAddress": "string",
                              "replyToEmail": null
                            }
                          },
                          "subscription": {
                            "plan": "string",
                            "startedAt": "string",
                            "expiresAt": "string",
                            "recurring": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get account details. This endpoint is quite unique since we also provide relations with information that can be \"hard\" cached and used to your requests. Id for vats, or your current Biller ID or payment methods are just some of the extra information provided. Try the end point to see the response with the payload.\n\n<!-- theme: warning -->\n> This is a super charged endpoint with data that can be used in multiple requests and can be safely cached.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "parameters": []
    },
    "/customers": {
      "get": {
        "summary": "List of customers",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-customers",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Testing S.A."
            },
            "in": "query",
            "name": "q",
            "description": " If you want to list customers by a search term. Lookup is on Company name, VatID, Telephone,Email."
          },
          {
            "schema": {
              "type": "boolean",
              "example": 1
            },
            "in": "query",
            "name": "unpaid",
            "description": "If you want to list only customer with unpaid invoices"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "schema": {
              "type": "string",
              "example": "24"
            },
            "in": "query",
            "name": "tagid",
            "description": "If you want to filter by a Tag, fill in the Tag ID"
          },
          {
            "$ref": "#/components/parameters/withRelations"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "description": "A list of customers",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "deprecated": true
      },
      "post": {
        "summary": "Create a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 0,
                        "email": "string",
                        "inCharge": "string",
                        "info": "string",
                        "company": "string",
                        "profession": "string",
                        "vatId": "string",
                        "taxOffice": "string",
                        "streetAddress": "string",
                        "city": "string",
                        "postalCode": "string",
                        "phone": "string",
                        "mobile": "string",
                        "fax": "string",
                        "field1": null,
                        "field2": null,
                        "field3": null,
                        "field4": null,
                        "enabled": true,
                        "lang": "el",
                        "discount": 0,
                        "alias": "string",
                        "debt": 0,
                        "overflowAmount": 0,
                        "total": 0,
                        "unpaid": 0,
                        "createdAt": "2019-08-24T14:15:22Z",
                        "updatedAt": "string",
                        "deletedAt": null,
                        "country": "GR",
                        "isCompany": true,
                        "customerType": 1,
                        "publicNote": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string",
                      "minLength": 1
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "errors": {
                      "type": "object"
                    },
                    "": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "statusCode",
                    "error",
                    "message",
                    "errors"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 422,
                      "error": "Validation Failed",
                      "message": "Your input had some validation errors.",
                      "errors": {
                        "isCompany": [
                          "The is company field is required."
                        ],
                        "customerType": [
                          "The customer type field is required."
                        ],
                        "company": [
                          "The 'Company' field is required."
                        ],
                        "lang": [
                          "The 'Language' field is required."
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-customers",
        "description": "Create a customer\n\n#### customerType options\n| Option | Description |\n| --- | ----------- |\n| 1 | Domestic customer |\n| 2 | Intra-community customer (EU-VIES) |\n| 3 | Foreign customer |\n| 4 | Private individual |",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "isCompany": {
                    "type": "boolean",
                    "description": "If customer is company, make that true"
                  },
                  "company": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The company name"
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1,
                    "description": "the language that you want the customer to receive his invoices. \"el\" or \"en\""
                  },
                  "profession": {
                    "type": "string",
                    "minLength": 1
                  },
                  "inCharge": {
                    "type": "string",
                    "minLength": 1
                  },
                  "vatId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "taxOffice": {
                    "type": "string",
                    "minLength": 1
                  },
                  "streetAddress": {
                    "type": "string",
                    "minLength": 1
                  },
                  "alias": {
                    "type": "string",
                    "minLength": 1
                  },
                  "customerType": {
                    "type": "number"
                  },
                  "skipVatIdUniqueness": {
                    "type": "boolean"
                  },
                  "postalCode": {
                    "type": "string",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "minLength": 1
                  },
                  "mobile": {
                    "type": "string",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  },
                  "fax": {
                    "type": "string",
                    "minLength": 1
                  },
                  "info": {
                    "type": "string",
                    "minLength": 1
                  },
                  "publicNote": {
                    "type": "string",
                    "minLength": 1
                  },
                  "addresses": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "address": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "incharge": {
                          "type": "string",
                          "minLength": 1
                        },
                        "tel": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "title"
                      ]
                    }
                  }
                },
                "required": [
                  "isCompany",
                  "company",
                  "customerType",
                  "country"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "isCompany": true,
                    "company": "TestingCompany",
                    "lang": "el",
                    "profession": "Web Dev",
                    "inCharge": "George Tester",
                    "vatId": "EL89991223123",
                    "taxOffice": "A Athens",
                    "streetAddress": "Androutsou",
                    "alias": "Test",
                    "customerType": 1,
                    "postalCode": "12312",
                    "city": "Athens",
                    "country": "GR",
                    "mobile": "69432232323",
                    "phone": "123123123",
                    "fax": "123123123123",
                    "info": "private information text",
                    "publicNote": "public note text",
                    "addresses": [
                      {
                        "title": "Τιτλος 1",
                        "address": "Διευθυνση 1",
                        "city": "Πόλη 1",
                        "zip": "ΤΚ 1",
                        "incharge": "Γιωργος 1",
                        "tel": "210 1",
                        "country": "GR"
                      },
                      {
                        "title": "Τιτλος 2",
                        "address": "Διευθυνση 2",
                        "city": "Πόλη 2",
                        "zip": "ΤΚ 2",
                        "incharge": "Γιωργος 2",
                        "tel": "220 2",
                        "country": "GR"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/contacts": {
      "get": {
        "summary": "List of contacts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-contacts",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "Testing S.A."
            },
            "in": "query",
            "name": "q",
            "description": " If you want to list customers by a search term. Lookup is on Company name, VatID, Telephone,Email."
          },
          {
            "schema": {
              "type": "boolean",
              "example": 1
            },
            "in": "query",
            "name": "unpaid",
            "description": "If you want to list only customer with unpaid invoices"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "schema": {
              "type": "string",
              "example": "24"
            },
            "in": "query",
            "name": "tagid",
            "description": "If you want to filter by a Tag, fill in the Tag ID"
          },
          {
            "$ref": "#/components/parameters/withRelations"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "description": "A list of contacts",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "tags": [
          "Contacts"
        ]
      },
      "post": {
        "summary": "Create a contact",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 0,
                        "email": "string",
                        "inCharge": "string",
                        "info": "string",
                        "company": "string",
                        "profession": "string",
                        "vatId": "string",
                        "taxOffice": "string",
                        "streetAddress": "string",
                        "city": "string",
                        "postalCode": "string",
                        "phone": "string",
                        "mobile": "string",
                        "fax": "string",
                        "field1": null,
                        "field2": null,
                        "field3": null,
                        "field4": null,
                        "enabled": true,
                        "lang": "el",
                        "discount": 0,
                        "alias": "string",
                        "debt": 0,
                        "overflowAmount": 0,
                        "total": 0,
                        "unpaid": 0,
                        "createdAt": "2019-08-24T14:15:22Z",
                        "updatedAt": "string",
                        "deletedAt": null,
                        "country": "GR",
                        "isCompany": true,
                        "customerType": 1,
                        "publicNote": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string",
                      "minLength": 1
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "errors": {
                      "type": "object"
                    },
                    "": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "statusCode",
                    "error",
                    "message",
                    "errors"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 422,
                      "error": "Validation Failed",
                      "message": "Your input had some validation errors.",
                      "errors": {
                        "isCompany": [
                          "The is company field is required."
                        ],
                        "customerType": [
                          "The customer type field is required."
                        ],
                        "company": [
                          "The 'Company' field is required."
                        ],
                        "lang": [
                          "The 'Language' field is required."
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-contacts",
        "description": "Create a contact\n\n#### customerType options\n| Option | Description |\n| --- | ----------- |\n| 1 | Domestic customer |\n| 2 | Intra-community customer (EU-VIES) |\n| 3 | Foreign customer |\n| 4 | Private individual |\n\n#### contactType options\n| Option | Description |\n| --- | ----------- |\n| 1 | Customer |\n| 2 | Supplier |\n| 3 | Customer & Supplier |\n\n",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "isCompany": {
                    "type": "boolean",
                    "description": "If customer is company, make that true"
                  },
                  "company": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The company name"
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1,
                    "description": "the language that you want the customer to receive his invoices. \"el\" or \"en\""
                  },
                  "profession": {
                    "type": "string",
                    "minLength": 1
                  },
                  "inCharge": {
                    "type": "string",
                    "minLength": 1
                  },
                  "vatId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "taxOffice": {
                    "type": "string",
                    "minLength": 1
                  },
                  "streetAddress": {
                    "type": "string",
                    "minLength": 1
                  },
                  "alias": {
                    "type": "string",
                    "minLength": 1
                  },
                  "customerType": {
                    "type": "number"
                  },
                  "skipVatIdUniqueness": {
                    "type": "boolean"
                  },
                  "postalCode": {
                    "type": "string",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "minLength": 1
                  },
                  "mobile": {
                    "type": "string",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  },
                  "fax": {
                    "type": "string",
                    "minLength": 1
                  },
                  "info": {
                    "type": "string",
                    "minLength": 1
                  },
                  "publicNote": {
                    "type": "string",
                    "minLength": 1
                  },
                  "addresses": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "address": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "incharge": {
                          "type": "string",
                          "minLength": 1
                        },
                        "tel": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "title"
                      ]
                    }
                  },
                  "contactType": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                },
                "required": [
                  "isCompany",
                  "company",
                  "customerType",
                  "country"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "isCompany": true,
                    "company": "TestingCompany",
                    "lang": "el",
                    "profession": "Web Dev",
                    "inCharge": "George Tester",
                    "vatId": "EL89991223123",
                    "taxOffice": "A Athens",
                    "streetAddress": "Androutsou",
                    "alias": "Test",
                    "customerType": 1,
                    "postalCode": "12312",
                    "city": "Athens",
                    "country": "GR",
                    "mobile": "69432232323",
                    "phone": "123123123",
                    "fax": "123123123123",
                    "info": "private information text",
                    "publicNote": "public note text",
                    "contactType": 1,
                    "currency": "EUR",
                    "addresses": [
                      {
                        "title": "Τιτλος 1",
                        "address": "Διευθυνση 1",
                        "city": "Πόλη 1",
                        "zip": "ΤΚ 1",
                        "incharge": "Γιωργος 1",
                        "tel": "210 1",
                        "country": "GR"
                      },
                      {
                        "title": "Τιτλος 2",
                        "address": "Διευθυνση 2",
                        "city": "Πόλη 2",
                        "zip": "ΤΚ 2",
                        "incharge": "Γιωργος 2",
                        "tel": "220 2",
                        "country": "GR"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "parameters": []
    },
    "/invoices": {
      "get": {
        "summary": "List invoices",
        "tags": [
          "Invoices"
        ],
        "operationId": "get-v1-invoices",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceListItem"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get a list with your invoices."
      },
      "post": {
        "summary": "Create an invoice",
        "tags": [
          "Invoices"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-v1-invoices",
        "description": "Create a new invoice.",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "number",
                    "description": "The customer ID"
                  },
                  "sendMail": {
                    "type": "boolean",
                    "description": "Fill in true if you want your customer to receive the invoice by email."
                  },
                  "excludeMydata": {
                    "type": "boolean",
                    "description": "By making this true, the invoice is excluded from myData."
                  },
                  "invoiceDate": {
                    "type": "string",
                    "description": "The invoice's date, in Y-m-d format",
                    "format": "date"
                  },
                  "invoiceTypeId": {
                    "type": "number",
                    "description": "The invoice type ID"
                  },
                  "isPaid": {
                    "type": "boolean",
                    "description": "The invoice paid status"
                  },
                  "mydataInvoiceType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The invoice type according Mydata"
                  },
                  "taxes": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "taxId": {
                          "type": "number",
                          "description": "The Tax ID."
                        },
                        "taxVatShow": {
                          "type": "number",
                          "description": "Select if you want to be able to override it in the UI."
                        }
                      },
                      "required": [
                        "taxId"
                      ]
                    }
                  },
                  "products": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "integer",
                          "description": "The product ID"
                        },
                        "details": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The body of the product in case you want to overrride the default body."
                        },
                        "measurementUnit": {
                          "type": "number",
                          "description": "Options are 1 - Pcs, 2 - Kg, 3 - Lt"
                        },
                        "vatId": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "incomeClassificationCat": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Is needed if Mydata plugin is enabled. Check the possible options in the endpoint's description."
                        },
                        "incomeClassificationType": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Is needed if Mydata plugin is enabled. Check the possible options in the endpoint's description."
                        },
                        "vatExceptionCat": {
                          "type": "string",
                          "description": "Only needed if vat is 0%.Mydata plugin should be enabled as well. Check the possible options in the endpoint's description."
                        }
                      },
                      "required": [
                        "details",
                        "vatId"
                      ]
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "An array of tags if any",
                    "items": {}
                  },
                  "mydataPayment": {
                    "type": "object",
                    "description": "Is needed if Mydata plugin is enabled. Check the possible options in the endpoint's description.",
                    "properties": {
                      "paidAmount": {
                        "type": "number"
                      },
                      "paymentMethod": {
                        "type": "number"
                      },
                      "epiPistosi": {
                        "type": "number"
                      }
                    }
                  },
                  "mailOptions": {
                    "type": [
                      "string",
                      "object"
                    ],
                    "description": "In case you want to have custom email subject/body",
                    "properties": {
                      "subject": {
                        "type": "string",
                        "description": "The subject of the email"
                      },
                      "body": {
                        "type": "string",
                        "description": "The main body of the email"
                      }
                    }
                  },
                  "reminder": {
                    "type": "boolean"
                  },
                  "paymentMethod": {
                    "type": "array",
                    "description": "By setting to null or not including at all you set the \"default\" payment methods. If you want to set certain online/offline payment methods, ad their id in an array. In case you want to expilicitly avoid any payment for this invoice put the value of -1 in the array",
                    "nullable": true,
                    "items": {}
                  }
                },
                "required": [
                  "invoiceTypeId",
                  "products"
                ]
              },
              "examples": {
                "Example-1- Simple": {
                  "value": {
                    "customerId": 694,
                    "sendMail": false,
                    "excludeMydata": true,
                    "invoiceDate": "2021-04-15",
                    "invoiceTypeId": 349,
                    "isPaid": true,
                    "mydataInvoiceType": "2.1",
                    "taxes": [
                      {
                        "taxId": 514
                      },
                      {
                        "taxId": 524,
                        "taxVatShow": 1
                      }
                    ],
                    "products": [
                      {
                        "productId": null,
                        "details": "test",
                        "measurementUnit": 1,
                        "vatId": 376,
                        "price": 123.32,
                        "quantity": 1,
                        "incomeClassificationCat": "category1_3",
                        "incomeClassificationType": "E3_561_001"
                      }
                    ],
                    "tags": [
                      "billit",
                      "millit"
                    ],
                    "mydataPayment": {
                      "paidAmount": 0.32,
                      "paymentMethod": 3,
                      "epiPistosi": 10
                    },
                    "reminder": 1
                  }
                },
                "Example with TaxProduct(Telos)": {
                  "value": {
                    "customerId": 0,
                    "sendMail": true,
                    "excludeMydata": true,
                    "invoiceDate": "2019-08-24",
                    "invoiceTypeId": 0,
                    "isPaid": true,
                    "mydataInvoiceType": "string",
                    "taxes": [
                      {
                        "taxId": 0,
                        "taxVatShow": 0
                      }
                    ],
                    "products": [
                      {
                        "productId": 0,
                        "details": "string",
                        "measurementUnit": 0,
                        "vatId": 0,
                        "price": 0,
                        "quantity": 0,
                        "incomeClassificationCat": "string",
                        "incomeClassificationType": "string",
                        "vatExceptionCat": "string"
                      },
                      {
                        "vatId": 376,
                        "price": 11,
                        "quantity": 1,
                        "type": "telos",
                        "taxId": 592
                      }
                    ],
                    "tags": [
                      null
                    ],
                    "mydataPayment": {
                      "paidAmount": 0,
                      "paymentMethod": 0,
                      "epiPistosi": 0
                    },
                    "mailOptions": "string",
                    "reminder": true
                  }
                },
                "Example with selfPricing": {
                  "value": {
                    "customerId": 694,
                    "sendMail": false,
                    "excludeMydata": true,
                    "invoiceDate": "2021-04-15",
                    "invoiceTypeId": 349,
                    "isPaid": true,
                    "mydataInvoiceType": "2.1",
                    "selfPricing": true,
                    "taxes": [
                      {
                        "taxId": 514
                      },
                      {
                        "taxId": 524,
                        "taxVatShow": 1
                      }
                    ],
                    "products": [
                      {
                        "productId": null,
                        "details": "test",
                        "measurementUnit": 1,
                        "vatId": 376,
                        "price": 123.32,
                        "quantity": 1,
                        "incomeClassificationCat": "category2_1",
                        "incomeClassificationType": "E3_102_001",
                        "expenseVatClassification": "VAT_361"
                      },
                      {
                        "vatId": 376,
                        "price": 13,
                        "quantity": 1,
                        "type": "telos",
                        "taxId": 592
                      }
                    ],
                    "tags": [
                      "billit",
                      "millit"
                    ],
                    "mydataPayment": {
                      "paidAmount": 0.32,
                      "paymentMethod": 3,
                      "epiPistosi": 10
                    }
                  }
                },
                "example-withPaymentMethods": {
                  "value": {
                    "customerId": 694,
                    "sendMail": false,
                    "excludeMydata": true,
                    "invoiceDate": "2021-04-15",
                    "invoiceTypeId": 349,
                    "isPaid": true,
                    "mydataInvoiceType": "2.1",
                    "taxes": [
                      {
                        "taxId": 514
                      },
                      {
                        "taxId": 524,
                        "taxVatShow": 1
                      }
                    ],
                    "products": [
                      {
                        "productId": null,
                        "details": "test",
                        "measurementUnit": 1,
                        "vatId": 376,
                        "price": 123.32,
                        "quantity": 1,
                        "incomeClassificationCat": "category1_3",
                        "incomeClassificationType": "E3_561_001"
                      }
                    ],
                    "tags": [
                      "billit",
                      "millit"
                    ],
                    "mydataPayment": {
                      "paidAmount": 0.32,
                      "paymentMethod": 3,
                      "epiPistosi": 10
                    },
                    "reminder": 1,
                    "paymentMethod": [
                      1506,
                      1511
                    ]
                  }
                }
              }
            }
          },
          "description": "<!-- theme: warning -->\n> In order to get back or post payload with MyData information, you need to enable the Mydata plugin first. Please do from your settings menu if your business is located in Greece and you need to connect myData to your account.\n\n### Mydata details\n\n#### mydataInvoiceType options\n| Option | Description |\n| --- | ----------- |\n| 1.1 | Τιμολόγιο Πώλησης |\n| 1.2 | Τιμολόγιο Πώλησης / Ενδοκοινοτικές Παραδόσεις |\n| 1.3 | Τιμολόγιο Πώλησης / Παραδόσεις Τρίτων Χωρών |\n| 1.4 | Τιμολόγιο Πώλησης / Πώληση για Λογαριασμό Τρίτων |\n| 1.5 | Τιμολόγιο Πώλησης / Εκκαθάριση Πωλήσεων Τρίτων - Αμοιβή από Πωλήσεις Τρίτων |\n| 1.6 | Τιμολόγιο Πώλησης / Συμπληρωματικό Παραστατικό |\n| 2.1 | Τιμολόγιο Παροχής |\n| 2.2 | Τιμολόγιο Παροχής / Ενδοκοινοτική Παροχή Υπηρεσιών | \n| 2.3 | Τιμολόγιο Παροχής / Παροχή Υπηρεσιών σε λήπτη Τρίτης Χώρας |\n| 2.4 | Τιμολόγιο Παροχής / Συμπληρωματικό Παραστατικό |\n| 3.1 | Τίτλος Κτήσης (μη υπόχρεος Εκδότης) | \n| 3.2 | Τίτλος Κτήσης (άρνηση έκδοσης από υπόχρεο Εκδότη) |\n| 5.1 | Πιστωτικό Τιμολόγιο / Συσχετιζόμενο | \n| 5.2 | ΠιστωτικόΤιμολόγιο  / Μη Συσχετιζόμενο |\n| 6.1 | Στοιχείο Αυτοπαράδοσης |\n| 6.2 | Στοιχείο Ιδιοχρησιμοποίησης |\n| 7.1 | Συμβόλαιο - Έσοδο |\n| 8.1 | Ενοίκια -Έσοδο | \n| 8.2 | Ειδικό Στοιχείο –Απόδειξης Είσπραξης Φόρου  Διαμονής |\n| 11.1 | ΑΛΠ |\n| 11.2 | ΑΠΥ |\n| 11.3 | Απλοποιημένο Τιμολόγιο |\n| 11.4 | Πιστωτικό Στοιχ. Λιανικής |\n| 11.5 | Απόδειξη Λιανικής Πώλησης για Λογ/σμό Τρίτων |\n\n\n#### incomeClassificationCat options\n| Option | Description |\n| --- | ----------- |\n| category1_1 | Έσοδα από Πώληση Εμπορευμάτων |\n| category1_2 | Έσοδα από Πώληση Προϊόντων |\n| category1_3 | Έσοδα από Παροχή Υπηρεσιών |\n| category1_4 | Έσοδα από Πώληση Παγίων |\n| category1_5 | Λοιπά Έσοδα/ Κέρδη |\n| category1_6 | Αυτοπαραδόσεις /  Ιδιοχρησιμοποιήσεις |\n| category1_7 | Έσοδα για λ/σμο τρίτων |\n| category1_8 | Έσοδα προηγούμενων χρήσεων |\n| category1_9 | Έσοδα επομένων χρήσεων |\n| category1_10 | Λοιπές Εγγραφές Τακτοποίησης Εσόδων |\n| category1_95 | Λοιπά Πληροφοριακά Στοιχεία Εσόδων |\n\n\n#### incomeClassificationType options\n| Option | Description |\n| --- | ----------- |\n| E3_106 | Ιδιοπαραγωγή παγίων -Αυτοπαραδόσεις -Καταστροφές αποθεμάτων/Εμπορεύματα |\n| E3_205 | Ιδιοπαραγωγή παγίων -Αυτοπαραδόσεις -Καταστροφές αποθεμάτων/Πρώτες ύλες και λοιπά υλικά |\n| E3_210 | Ιδιοπαραγωγή παγίων -Αυτοπαραδόσεις -Καταστροφές αποθεμάτων/Προϊόντα και παραγωγή σε εξέλιξη |\n| E3_305 | Ιδιοπαραγωγή παγίων -Αυτοπαραδόσεις –Καταστροφές αποθεμάτων/Πρώτες ύλες και λοιπά υλικά |\n| E3_310 | Ιδιοπαραγωγή παγίων -Αυτοπαραδόσεις -Καταστροφές αποθεμάτων/Προϊόντα και παραγωγή σε εξέλιξη |\n| E3_318 | Ιδιοπαραγωγή παγίων -Αυτοπαραδόσεις -Καταστροφές αποθεμάτων/Έξοδα παραγωγής |\n| E3_561_001 | Πωλήσεις αγαθών και υπηρεσιών Χονδρικές -Επιτηδευματιών |\n| E3_561_002 | Πωλήσεις αγαθών και υπηρεσιών Χονδρικές βάσει άρθρου 39α παρ 5 του Κώδικα Φ.Π.Α. (Ν.2859/2000) |\n| E3_561_003 | Πωλήσεις αγαθών και υπηρεσιών Λιανικές -Ιδιωτική Πελατεία |\n| E3_561_004 | Πωλήσεις αγαθών και υπηρεσιών Λιανικές βάσει άρθρου 39α παρ 5 του Κώδικα Φ.Π.Α. (Ν.2859/2000) |\n| E3_561_005 | Πωλήσεις αγαθών και υπηρεσιών Εξωτερικού Ενδοκοινοτικές |\n| E3_561_006 | Πωλήσεις αγαθών και υπηρεσιών Εξωτερικού Τρίτες Χώρες |\n| E3_561_007 | Πωλήσεις αγαθών και υπηρεσιών Λοιπά |\n| E3_562 | Λοιπά συνήθη έσοδα |\n| E3_563 | Πιστωτικοί τόκοι και συναφή έσοδα|\n| E3_564 | Πιστωτικές συναλλαγματικές διαφορές |\n| E3_565 | Έσοδα συμμετοχών |\n| E3_566 | Κέρδη από διάθεση μη κυκλοφορούντων περιουσιακών στοιχείων |\n| E3_567 | Κέρδη από αναστροφή προβλέψεων και απομειώσεων |\n| E3_568 | Κέρδη από επιμέτρηση στην εύλογη αξία |\n| E3_570 | Ασυνήθη έσοδα και κέρδη |\n| E3_595 | Έξοδα σε ιδιοπαραγωγή |\n| E3_596 | Επιδοτήσεις -Επιχορηγήσεις |\n| E3_597 | Επιδοτήσεις -Επιχορηγήσεις για επενδυτικούς σκοπούς -κάλυψη δαπανών |\n| E3_880_001 | Πωλήσεις Παγίων Χονδρικές |\n| E3_880_002 | Πωλήσεις Παγίων Λιανικές |\n| E3_880_003 | Πωλήσεις Παγίων Εξωτερικού Ενδοκοινοτικές |\n| E3_880_004 | Πωλήσεις Παγίων Εξωτερικού Τρίτες Χώρες |\n| E3_881_001 | Πωλήσεις για λογ/σμο Τρίτων Χονδρικές |\n| E3_881_002 | Πωλήσεις για λογ/σμο Τρίτων Λιανικές |\n| E3_881_003 | Πωλήσεις για λογ/σμο Τρίτων Εξωτερικού Ενδοκοινοτικές |\n| E3_881_004 | Πωλήσεις για λογ/σμο Τρίτων Εξωτερικού Τρίτες Χώρες |\n\n\n#### paymentMethod options\n\n| Option | Description  |  \n| --- | ----------- |\n| 1 | Επαγ. Λογαριασμός Πληρωμών Ημεδαπής |\n| 2 | Επαγ. Λογαριασμός Πληρωμών Αλλοδαπής |\n| 3 | Μετρητά |\n| 4 | Επιταγή |\n| 5 | Επί Πιστώσει |\n\n#### VAT exclusion reason options\n| Option | Description |\n| --- | ----------- |\n| 1 | Χωρίς ΦΠΑ –άρθρο2 και3 του Κώδικα ΦΠΑ |\n| 2 | Χωρίς ΦΠΑ -άρθρο 5 του Κώδικα ΦΠΑ |\n| 3 | Χωρίς ΦΠΑ -άρθρο 13 του Κώδικα ΦΠΑ |\n| 4 | Χωρίς ΦΠΑ -άρθρο 14 του Κώδικα ΦΠΑ |\n| 5 | Χωρίς ΦΠΑ -άρθρο 16 του Κώδικα ΦΠΑ |\n| 6 | Χωρίς ΦΠΑ -άρθρο 19 του Κώδικα ΦΠΑ |\n| 7 | Χωρίς ΦΠΑ -άρθρο 22 του Κώδικα ΦΠΑ |\n| 8 | Χωρίς ΦΠΑ -άρθρο 24 του Κώδικα ΦΠΑ |\n| 9 | Χωρίς ΦΠΑ -άρθρο 25 του Κώδικα ΦΠΑ |\n| 10 | Χωρίς ΦΠΑ -άρθρο 26 του Κώδικα ΦΠΑ |\n| 11 | Χωρίς ΦΠΑ -άρθρο 27 του Κώδικα ΦΠΑ |\n| 12 | Χωρίς ΦΠΑ -άρθρο 27  -Πλοία Ανοικτής  Θαλάσσης  του  Κώδικα ΦΠΑ |\n| 13 | Χωρίς  ΦΠΑ -άρθρο  27.1.γ -ΠλοίαΑνοικτής Θαλάσσης του Κώδικα ΦΠΑ |\n| 14 | Χωρίς ΦΠΑ -άρθρο 28 του Κώδικα ΦΠΑ |\n| 15 | Χωρίς ΦΠΑ -άρθρο 39 του Κώδικα ΦΠΑ |\n| 16 | Χωρίς ΦΠΑ -άρθρο 39α τουΚώδικα ΦΠΑ |\n| 17 | Χωρίς ΦΠΑ -άρθρο 40 του Κώδικα ΦΠΑ |\n| 18 | Χωρίς ΦΠΑ -άρθρο 41 του Κώδικα ΦΠΑ |\n| 19 | Χωρίς ΦΠΑ -άρθρο 47 του Κώδικα ΦΠΑ |\n| 20 | ΦΠΑ εμπεριεχόμενος -άρθρο 43 του Κώδικα ΦΠΑ |\n| 21 | ΦΠΑ εμπεριεχόμενος -άρθρο 44 του Κώδικα ΦΠΑ |\n| 22 | ΦΠΑ εμπεριεχόμενος -άρθρο 45 του Κώδικα ΦΠΑ |\n| 23 | ΦΠΑ εμπεριεχόμενος -άρθρο 46 του Κώδικα ΦΠΑ |\n| 24 | Χωρίς ΦΠΑ -άρθρο 6 του Κώδικα ΦΠΑ |\n\n\n### SelfPricing - Αυτοτιμολόγηση\nIf you want to generate invoices with selfPricing is a bit different. This invoice is actually an expense so the customer is a supplier not a customer ( or could be both in some cases) and the mydata specifics are a bit different, again because this kind of invoice is actuallly an expense.\n \n- only 1.1,2.1 mydataInvoiceType is allowed in this case.\n- The customerId should point to a customer that has a type of supplier or both a supplier or customer type.\n- You should select classifications from expenses not income\n- You should select a classification for the VAT as well ( check VatClassifications options )\n- To understand how you should make this post, check the example (select from the dropdown in the body request on your right) for SelfPricing.\n\n#### expenseClassificationCat options\n| Option | Description |\n| --- | ----------- |\n| category2_1 | Αγορές Εμπορευμάτων |\n| category2_2 | Αγορές Α'-Β' Υλών |\n| category2_3 | Λήψη Υπηρεσιών |\n| category2_4 | Γενικά Έξοδα με δικαίωμα έκπτωσης ΦΠΑ |\n| category2_5 | Γενικά Έξοδα χωρίς δικαίωμα έκπτωσης ΦΠΑ |\n| category2_6 | Αμοιβές και Παροχές προσωπικού |\n| category2_7 | Αγορές Παγίων |\n| category2_8 | Αποσβέσεις Παγίων |\n| category2_9 | Έξοδα για λ/σμο τρίτων |\n| category2_10 | Έξοδα προηγούμενων χρήσεων |\n| category2_11 | Έξοδα επομένων χρήσεων |\n| category2_12 | Λοιπές Εγγραφές Τακτοποίησης Εξόδων |\n| category2_13 | Αποθέματα Έναρξης Περιόδου |\n| category2_14 | Αποθέματα Λήξης Περιόδου |\n| category2_95 | Λοιπά Πληροφοριακά Στοιχεία Εξόδων |\n\n\n#### expenseClassificationType options\n| Option | Description |\n| --- | ----------- |\n| E3_101 | Εμπορεύματα έναρξης |\n| E3_102_001 | Αγορές εμπορευμάτων χρήσης (καθαρό ποσό)/Χονδρικές |\n| E3_102_002 | Αγορές εμπορευμάτων χρήσης (καθαρό ποσό)/Λιανικές |\n| E3_102_003 | Αγορές εμπορευμάτων χρήσης (καθαρό ποσό)/Αγαθών του άρθρου 39α παρ.5 του Κώδικα Φ.Π.Α. (ν.2859/2000) |\n| E3_102_004 | Αγορές εμπορευμάτων χρήσης (καθαρό ποσό)/Εξωτερικού Ενδοκοινοτικές |\n| E3_102_005 | Αγορές εμπορευμάτων χρήσης (καθαρό ποσό)/Εξωτερικού Τρίτες Χώρες |\n| E3_102_006 | Αγορές εμπορευμάτων χρήσης (καθαρό ποσό)Λοιπά |\n| E3_104 | Εμπορεύματα λήξης |\n| E3_201 | Πρώτες ύλες και υλικά έναρξης/Παραγωγή |\n| E3_202_001 | Αγορές πρώτων υλών και υλικών χρήσης (καθαρό ποσό)/Χονδρικές |\n| E3_202_002 | Αγορές πρώτων υλών και υλικών χρήσης (καθαρό ποσό)/Λιανικές |\n| E3_202_003 | Αγορές πρώτων υλών και υλικών χρήσης (καθαρό ποσό)/Εξωτερικού Ενδοκοινοτικές |\n| E3_202_004 | Αγορές πρώτων υλών και υλικών χρήσης (καθαρό ποσό)/Εξωτερικού Τρίτες Χώρες |\n| E3_202_005 | Αγορές πρώτων υλών και υλικών χρήσης (καθαρό ποσό)/Λοιπά |\n| E3_204 | Αποθέματα λήξης πρώτων υλών και υλικών/Παραγωγή |\n| ... | ... |\n\n\n\n#### VatClassifications options\n| Option | Description |\n| --- | ----------- |\n| VAT_361 | Αγορές & δαπάνες στο εσωτερικό της χώρας |\n| VAT_362 | Αγορές & εισαγωγές επενδ. Αγαθών (πάγια) |\n| VAT_363 | Λοιπές εισαγωγές εκτός επενδ. Αγαθών (πάγια) |\n| VAT_364 | Ενδοκοινοτικές αποκτήσεις αγαθών |\n| VAT_365 | Ενδοκοινοτικές λήψεις υπηρεσιών άρθρ. 14.2.α |\n| VAT_366 | Λοιπές πράξεις λήπτη |\n"
        }
      },
      "parameters": []
    },
    "/invoices/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "The uuid of invoice"
        }
      ],
      "get": {
        "summary": "Show Invoice",
        "tags": [
          "Invoices"
        ],
        "operationId": "get-invoices-uuid",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Show an invoice resource. In case you need the pdf URL add \"/pdf\" in the returned \"permalink\" url and you're ready to go.x`",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "user_id": 92,
                        "uuid": "f7234af9-1f67-48d3-98b6-22813b3a935f",
                        "permalink": "https://billitio.billit.io/inv/f7234af9-1f67-48d3-98b6-22813b3a935f",
                        "number": 401,
                        "type": {
                          "id": 349,
                          "name": "INVOICE",
                          "subtitle": "",
                          "note": "general note eng",
                          "alias": null,
                          "series": null
                        },
                        "biller": {
                          "id": 224,
                          "company": "BILLIT GP",
                          "info": null,
                          "profession": "Web development",
                          "taxId": "EL801379527",
                          "taxOffice": "N.Σμύρνη",
                          "streetAddress": "Tsamaous",
                          "city": "Piraeus",
                          "postCode": "18538",
                          "phone": "21023123",
                          "mobile": "123123",
                          "url": "https://billit.io/en",
                          "urlLabel": null,
                          "country": "GR",
                          "freeText": "<p>free text enlighs</p>"
                        },
                        "customer": {
                          "id": 644,
                          "email": "info@artspot.gr",
                          "company": "ARTSPOT  L.T.D",
                          "profession": "art promotions",
                          "taxId": "998039738",
                          "taxOffice": "Α΄ΠΕΙΡΑΙΑ",
                          "streetAddress": "Voulgari 23",
                          "city": "Piraeus",
                          "country": "AS",
                          "postCode": "18533",
                          "phone": "",
                          "mobile": "",
                          "isCompany": true,
                          "field1": "test",
                          "field2": null,
                          "field3": null,
                          "field4": null
                        },
                        "items": [
                          {
                            "quantity": 1,
                            "measurementUnitId": 1,
                            "product": {
                              "id": 56,
                              "title": null,
                              "description": "test"
                            },
                            "netAmount": 100,
                            "vatAmount": 0,
                            "totalAmount": 100,
                            "discountPercent": 0,
                            "discountAmount": 0,
                            "undiscountedTotalAmount": 100,
                            "vatId": 526,
                            "vatPercent": 0,
                            "mydata": {
                              "vatCat": null,
                              "vatExemptionCat": 6,
                              "dienergia": null,
                              "discountOption": null,
                              "withheldAmount": null,
                              "withheldPercentCat": null,
                              "stampDutyAmount": null,
                              "stampDutyPercent_cat": null,
                              "feesAmount": null,
                              "feesPercentCat": null,
                              "otherTaxesAmount": null,
                              "otherTaxesPercent_cat": null,
                              "deductionsAmount": null,
                              "lineComments": null,
                              "incomeClassificationType": [
                                {
                                  "id": 1,
                                  "type": "E3_561_006",
                                  "amount": 100,
                                  "category": "category1_3"
                                }
                              ],
                              "expensesClassificationType": null,
                              "rowType": null
                            }
                          }
                        ],
                        "note": "general note eng",
                        "amount": 100,
                        "vatAmount": 0,
                        "finalAmount": 100,
                        "payableAmount": 100,
                        "discountedAmount": 0,
                        "restAmount": 100,
                        "isPaid": false,
                        "layoutLang": "EN",
                        "paymentMethodIds": [
                          0
                        ],
                        "templateId": 0,
                        "hideItemNum": false,
                        "isRecurring": false,
                        "isSend": false,
                        "isRead": false,
                        "dateIssued": "2021-04-22",
                        "dateExpires": null,
                        "dateRead": null,
                        "createdAt": "2021-04-22T19:06:38+00:00",
                        "updatedAt": "2021-04-23T16:10:51+00:00",
                        "deletedAt": "2021-04-23T16:10:51+00:00",
                        "tags": [],
                        "isMydataEnabled": true,
                        "mydata": {
                          "type": "2.3",
                          "state": 1,
                          "errors": null,
                          "branch": 0,
                          "invoiceUid": null,
                          "invoiceMark": null,
                          "transmissionFailure": null,
                          "selfPricing": null,
                          "classificationMark": null,
                          "authenticationCode": null,
                          "canceledByMark": null,
                          "incomeClassification": null,
                          "expenseClassification": null,
                          "dienergia": null,
                          "mydataPaymentType": [
                            {
                              "type": 5,
                              "amount": 100,
                              "paymentMethodInfo": ""
                            }
                          ]
                        },
                        "dispatchDate": null,
                        "dispatchTime": null,
                        "vehicleNumber": null,
                        "movePurpose": null,
                        "loadingPlace": null,
                        "destination": null,
                        "correlatedInvoices": [],
                        "taxTotals": [],
                        "totalWithheldAmount": 0,
                        "totalFeesAmount": 0,
                        "totalStampDutyAmount": 0,
                        "totalOtherTaxesAmount": 0,
                        "totalDeductionsAmount": 0,
                        "vatList": [
                          {
                            "name": "0%",
                            "value": 0
                          }
                        ],
                        "offlinePaymentMethods": [
                          {
                            "label": "Cash",
                            "value": "<p>Payment in headquarters</p>"
                          }
                        ],
                        "onlinePaymentMethods": [
                          {
                            "id": 482,
                            "name": "Τραπεζα Πειραιώς [online]",
                            "gatewayId": 5
                          },
                          {
                            "id": 483,
                            "name": "BrainTree [online]",
                            "gatewayId": 3
                          },
                          {
                            "id": 491,
                            "name": "Paypal [online]",
                            "gatewayId": 2
                          }
                        ],
                        "templateExtras": {
                          "logo": "https://app.billit.local/uploads/logos/92/billit-other.png",
                          "templateName": "hydromet",
                          "multiLang": 1,
                          "dateFormat": "d-m-Y",
                          "currency": "EUR",
                          "currencySymbol": "€",
                          "currencyPos": 1,
                          "customerDept": false,
                          "allowPayments": true,
                          "hideTmx": false,
                          "hideReceiver": false,
                          "hidePricing": false,
                          "showBalance": false,
                          "hasSigningbox": false,
                          "extraFieldsLabels": [
                            "testen"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      },
      "put": {
        "summary": "Update an invoice",
        "operationId": "putinvoices-uuid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "user_id": 92,
                        "uuid": "f7234af9-1f67-48d3-98b6-22813b3a935f",
                        "permalink": "https://billitio.billit.io/inv/f7234af9-1f67-48d3-98b6-22813b3a935f",
                        "number": 401,
                        "type": {
                          "id": 349,
                          "name": "INVOICE",
                          "subtitle": "",
                          "note": "general note eng",
                          "alias": null,
                          "series": null
                        },
                        "biller": {
                          "id": 224,
                          "company": "BILLIT GP",
                          "info": null,
                          "profession": "Web development",
                          "taxId": "EL801379527",
                          "taxOffice": "N.Σμύρνη",
                          "streetAddress": "Tsamaous",
                          "city": "Piraeus",
                          "postCode": "18538",
                          "phone": "21023123",
                          "mobile": "123123",
                          "url": "https://billit.io/en",
                          "urlLabel": null,
                          "country": "GR",
                          "freeText": "<p>free text enlighs</p>"
                        },
                        "customer": {
                          "id": 644,
                          "email": "info@artspot.gr",
                          "company": "ARTSPOT  L.T.D",
                          "profession": "art promotions",
                          "taxId": "998039738",
                          "taxOffice": "Α΄ΠΕΙΡΑΙΑ",
                          "streetAddress": "Voulgari 23",
                          "city": "Piraeus",
                          "country": "AS",
                          "postCode": "18533",
                          "phone": "",
                          "mobile": "",
                          "isCompany": true,
                          "field1": "test",
                          "field2": null,
                          "field3": null,
                          "field4": null
                        },
                        "items": [
                          {
                            "quantity": 1,
                            "measurementUnitId": 1,
                            "product": {
                              "id": 56,
                              "title": null,
                              "description": "test"
                            },
                            "netAmount": 100,
                            "vatAmount": 0,
                            "totalAmount": 100,
                            "discountPercent": 0,
                            "discountAmount": 0,
                            "undiscountedTotalAmount": 100,
                            "vatId": 526,
                            "vatPercent": 0,
                            "mydata": {
                              "vatCat": null,
                              "vatExemptionCat": 6,
                              "dienergia": null,
                              "discountOption": null,
                              "withheldAmount": null,
                              "withheldPercentCat": null,
                              "stampDutyAmount": null,
                              "stampDutyPercent_cat": null,
                              "feesAmount": null,
                              "feesPercentCat": null,
                              "otherTaxesAmount": null,
                              "otherTaxesPercent_cat": null,
                              "deductionsAmount": null,
                              "lineComments": null,
                              "incomeClassificationType": [
                                {
                                  "id": 1,
                                  "type": "E3_561_006",
                                  "amount": 100,
                                  "category": "category1_3"
                                }
                              ],
                              "expensesClassificationType": null,
                              "rowType": null
                            }
                          }
                        ],
                        "note": "general note eng",
                        "amount": 100,
                        "vatAmount": 0,
                        "finalAmount": 100,
                        "payableAmount": 100,
                        "discountedAmount": 0,
                        "restAmount": 100,
                        "isPaid": false,
                        "layoutLang": "EN",
                        "paymentMethodIds": [
                          0
                        ],
                        "templateId": 0,
                        "hideItemNum": false,
                        "isRecurring": false,
                        "isSend": false,
                        "isRead": false,
                        "dateIssued": "2021-04-22",
                        "dateExpires": null,
                        "dateRead": null,
                        "createdAt": "2021-04-22T19:06:38+00:00",
                        "updatedAt": "2021-04-23T16:10:51+00:00",
                        "deletedAt": "2021-04-23T16:10:51+00:00",
                        "tags": [],
                        "isMydataEnabled": true,
                        "mydata": {
                          "type": "2.3",
                          "state": 1,
                          "errors": null,
                          "branch": 0,
                          "invoiceUid": null,
                          "invoiceMark": null,
                          "transmissionFailure": null,
                          "selfPricing": null,
                          "classificationMark": null,
                          "authenticationCode": null,
                          "canceledByMark": null,
                          "incomeClassification": null,
                          "expenseClassification": null,
                          "dienergia": null,
                          "mydataPaymentType": [
                            {
                              "type": 5,
                              "amount": 100,
                              "paymentMethodInfo": ""
                            }
                          ]
                        },
                        "dispatchDate": null,
                        "dispatchTime": null,
                        "vehicleNumber": null,
                        "movePurpose": null,
                        "loadingPlace": null,
                        "destination": null,
                        "correlatedInvoices": [],
                        "taxTotals": [],
                        "totalWithheldAmount": 0,
                        "totalFeesAmount": 0,
                        "totalStampDutyAmount": 0,
                        "totalOtherTaxesAmount": 0,
                        "totalDeductionsAmount": 0,
                        "vatList": [
                          {
                            "name": "0%",
                            "value": 0
                          }
                        ],
                        "offlinePaymentMethods": [
                          {
                            "label": "Cash",
                            "value": "<p>Payment in headquarters</p>"
                          }
                        ],
                        "onlinePaymentMethods": [
                          {
                            "id": 482,
                            "name": "Τραπεζα Πειραιώς [online]",
                            "gatewayId": 5
                          },
                          {
                            "id": 483,
                            "name": "BrainTree [online]",
                            "gatewayId": 3
                          },
                          {
                            "id": 491,
                            "name": "Paypal [online]",
                            "gatewayId": 2
                          }
                        ],
                        "templateExtras": {
                          "logo": "https://app.billit.local/uploads/logos/92/billit-other.png",
                          "templateName": "hydromet",
                          "multiLang": 1,
                          "dateFormat": "d-m-Y",
                          "currency": "EUR",
                          "currencySymbol": "€",
                          "currencyPos": 1,
                          "customerDept": false,
                          "allowPayments": true,
                          "hideTmx": false,
                          "hideReceiver": false,
                          "hidePricing": false,
                          "showBalance": false,
                          "hasSigningbox": false,
                          "extraFieldsLabels": [
                            "testen"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Invoices"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "number"
                  },
                  "sendMail": {
                    "type": "boolean"
                  },
                  "excludeMydata": {
                    "type": "boolean"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "minLength": 1
                  },
                  "invoiceTypeId": {
                    "type": "number"
                  },
                  "mydataInvoiceType": {
                    "type": "string",
                    "minLength": 1
                  },
                  "taxes": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "taxId",
                        "taxVatShow"
                      ],
                      "properties": {
                        "taxId": {
                          "type": "number"
                        },
                        "taxVatShow": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "products": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "details",
                        "measurementUnit",
                        "vatId",
                        "price",
                        "quantity",
                        "incomeClassificationCat",
                        "incomeClassificationType"
                      ],
                      "properties": {
                        "productId": {},
                        "details": {
                          "type": "string",
                          "minLength": 1
                        },
                        "measurementUnit": {
                          "type": "number"
                        },
                        "vatId": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "incomeClassificationCat": {
                          "type": "string",
                          "minLength": 1
                        },
                        "incomeClassificationType": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "required": [],
                      "properties": {}
                    }
                  },
                  "mydataPayment": {
                    "type": "object",
                    "properties": {
                      "paidAmount": {
                        "type": "number"
                      },
                      "paymentMethod": {
                        "type": "number"
                      },
                      "epiPistosi": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "paidAmount",
                      "paymentMethod",
                      "epiPistosi"
                    ]
                  }
                },
                "required": [
                  "customerId",
                  "sendMail",
                  "excludeMydata",
                  "invoiceDate",
                  "invoiceTypeId",
                  "mydataInvoiceType",
                  "taxes",
                  "products",
                  "tags",
                  "mydataPayment"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "customerId": 694,
                    "sendMail": false,
                    "excludeMydata": true,
                    "invoiceDate": "2021-04-15",
                    "invoiceTypeId": 349,
                    "mydataInvoiceType": "2.1",
                    "taxes": [
                      {
                        "taxId": 514
                      },
                      {
                        "taxId": 524,
                        "taxVatShow": 1
                      }
                    ],
                    "products": [
                      {
                        "productId": null,
                        "details": "test",
                        "measurementUnit": 1,
                        "vatId": 376,
                        "price": 123.32,
                        "quantity": 1,
                        "incomeClassificationCat": "category1_3",
                        "incomeClassificationType": "E3_561_001"
                      }
                    ],
                    "tags": [
                      "billit",
                      "millit"
                    ],
                    "mydataPayment": {
                      "paidAmount": 0.32,
                      "paymentMethod": 3,
                      "epiPistosi": 10
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "description": "Update an invoice\n\n<!-- theme: warning -->\n> In order to get back or post payload with MyData information, you need to enable the Mydata plugin first. Please do from your settings menu if your business is located in Greece and you need to connect myData to your account."
      },
      "delete": {
        "summary": "Delete an invoice",
        "operationId": "deleteinvoices-uuid",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Invoices"
        ],
        "description": "Delete an invoice. By deleting an invoice, you actually cancel it the first time. Only way you can actually delete it permantly is if the invoice is the last one for a certain invoice type.",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      }
    },
    "/products": {
      "get": {
        "summary": "List of products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "id": 16,
                          "name": "Web Development",
                          "description": "Web development services",
                          "nameSec": "",
                          "descriptionSec": "",
                          "unitPrice": 4000,
                          "defaultVatId": 250,
                          "stock": 0,
                          "withStock": false,
                          "isVatIncluded": false,
                          "ordering": false,
                          "active": false,
                          "bulkjobId": null,
                          "createdAt": "2015-09-03T20:56:24+00:00",
                          "updatedAt": "2016-06-27T09:28:46+00:00",
                          "deletedAt": null
                        },
                        {
                          "id": 21,
                          "name": "Φιλοξενία χώρου",
                          "description": "υπηρεσίες φιλοξενίας ιστοσελίδων",
                          "nameSec": "Web hosting services",
                          "descriptionSec": "",
                          "unitPrice": 52,
                          "defaultVatId": 376,
                          "stock": 0,
                          "withStock": true,
                          "isVatIncluded": false,
                          "ordering": false,
                          "active": false,
                          "bulkjobId": null,
                          "createdAt": "2015-10-08T15:26:15+00:00",
                          "updatedAt": "2016-10-11T13:18:17+00:00",
                          "deletedAt": null
                        }
                      ],
                      "links": {
                        "first": "https://api.billit.io/v1/products?page=1",
                        "last": "https://api.billit.io/v1/products?page=1",
                        "prev": null,
                        "next": null
                      },
                      "meta": {
                        "current_page": 1,
                        "from": 1,
                        "last_page": 1,
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Previous",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/products?page=1",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": null,
                            "label": "Next &raquo;",
                            "active": false
                          }
                        ],
                        "path": "https://api.billit.io/v1/products",
                        "per_page": 50,
                        "to": 6,
                        "total": 6
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        },
        "operationId": "get-products",
        "description": "Get a list of products",
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "schema": {
              "type": "string",
              "example": "5"
            },
            "in": "query",
            "name": "has_stock",
            "description": "Show only products that their stock is tracked."
          },
          {
            "schema": {
              "type": "string",
              "example": "10"
            },
            "in": "query",
            "name": "stock_less",
            "description": "Show only products that their stock is less thank this number."
          },
          {
            "schema": {
              "type": "string",
              "example": "10"
            },
            "in": "query",
            "name": "stock_greater",
            "description": "Show only products that their stock is less thank this number."
          },
          {
            "schema": {
              "type": "string",
              "example": "100"
            },
            "in": "query",
            "name": "tag_id",
            "description": "Show only products that are using a certain tag."
          }
        ],
        "security": [
          {
            "API TOKEN": []
          }
        ]
      },
      "post": {
        "summary": "Create a new product",
        "tags": [
          "Products"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": {
                        "id": 0,
                        "name": "string",
                        "description": "string",
                        "nameSec": "string",
                        "descriptionSec": "string",
                        "unitPrice": 0,
                        "defaultVatId": 0,
                        "stock": 0,
                        "withStock": true,
                        "isVatIncluded": true,
                        "ordering": true,
                        "active": true,
                        "bulkjobId": null,
                        "createdAt": "string",
                        "updatedAt": "string",
                        "deletedAt": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "operationId": "post-products",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nameSec": {
                    "type": "string"
                  },
                  "descriptionSec": {
                    "type": "string"
                  },
                  "unitPrice": {
                    "type": "number"
                  },
                  "defaultVatId": {
                    "type": "number"
                  },
                  "stock": {
                    "type": "number"
                  },
                  "withStock": {
                    "type": "boolean"
                  },
                  "isVatIncluded": {
                    "type": "boolean"
                  },
                  "active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "nameSec",
                  "descriptionSec",
                  "unitPrice",
                  "defaultVatId",
                  "stock",
                  "withStock",
                  "isVatIncluded",
                  "active"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "name": "Web Development",
                    "description": "Web development for Addapp project",
                    "nameSec": "",
                    "descriptionSec": "",
                    "unitPrice": 4000,
                    "defaultVatId": 250,
                    "stock": 0,
                    "withStock": false,
                    "isVatIncluded": false,
                    "active": false
                  }
                }
              }
            }
          }
        },
        "description": "Create a new product",
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      },
      "parameters": []
    },
    "/ocps": {
      "get": {
        "summary": "List OCP links",
        "tags": [
          "Ocp"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ocp"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "uuid": "17e03bbe-4df2-4ab7-827f-455fca8aae7d",
                          "customerId": null,
                          "title": "Web services for April",
                          "description": "tewst",
                          "productId": null,
                          "paymentmethodId": 491,
                          "cost": 100,
                          "vatId": 248,
                          "active": true,
                          "invoiceTypeId": null,
                          "cleanCost": 80,
                          "locale": "en",
                          "wasSend": false,
                          "permalink": "http://billitio.billit.io/ocpform/17e03bbe-4df2-4ab7-827f-455fca8aae7d",
                          "tags": [],
                          "sales": [],
                          "expirationAt": "-0001-11-30T00:00:00+00:00",
                          "createdAt": "2021-03-02T20:49:30+00:00",
                          "updatedAt": "2021-03-02T20:49:30+00:00",
                          "deletedAt": null
                        },
                        {
                          "uuid": "f73feaf6-34d3-4827-a188-16841881d795",
                          "customerId": null,
                          "title": "Support services",
                          "description": "With this link you will pay your yearly support",
                          "productId": 24,
                          "paymentmethodId": 491,
                          "cost": 1000,
                          "vatId": 248,
                          "active": false,
                          "invoiceTypeId": null,
                          "cleanCost": 1000,
                          "locale": "en",
                          "wasSend": false,
                          "permalink": "http://billitio.billit.io/ocpform/f73feaf6-34d3-4827-a188-16841881d795",
                          "tags": [],
                          "sales": [],
                          "expirationAt": "-0001-11-30T00:00:00+00:00",
                          "createdAt": "2021-03-02T20:41:34+00:00",
                          "updatedAt": "2021-03-02T20:49:00+00:00",
                          "deletedAt": null
                        }
                      ],
                      "links": {
                        "first": "https://api.billit.io/v1/ocps?page=1",
                        "last": "https://api.billit.io/v1/ocps?page=3",
                        "prev": null,
                        "next": "https://api.billit.io/v1/ocps?page=2"
                      },
                      "meta": {
                        "current_page": 1,
                        "from": 1,
                        "last_page": 3,
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Previous",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/ocps?page=1",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "https://api.billit.io/v1/ocps?page=2",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/ocps?page=3",
                            "label": "3",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/ocps?page=2",
                            "label": "Next &raquo;",
                            "active": false
                          }
                        ],
                        "path": "https://api.billit.io/v1/ocps",
                        "per_page": 15,
                        "to": 15,
                        "total": 44
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-ocps",
        "description": "Get a list of ocp links",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      },
      "post": {
        "summary": "Create a new OCP link",
        "tags": [
          "Ocp"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ocp"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "uuid": "5fee570c-136d-4691-a76e-b08136433da9",
                        "customerId": 726,
                        "title": "test lollypop",
                        "description": "asdf",
                        "productId": null,
                        "paymentmethodId": 483,
                        "cost": 138.99,
                        "vatId": 377,
                        "active": false,
                        "invoiceTypeId": 350,
                        "netValue": 123,
                        "locale": "el",
                        "wasSend": false,
                        "permalink": "http://billitio.billit.local/ocpform/5fee570c-136d-4691-a76e-b08136433da9",
                        "tags": [],
                        "sales": [],
                        "expirationAt": "2019-04-11T00:00:00+00:00",
                        "createdAt": "2019-04-06T21:49:34+00:00",
                        "updatedAt": "2019-04-13T21:12:24+00:00",
                        "deletedAt": null
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-ocps",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the link"
                  },
                  "description": {
                    "type": "string",
                    "description": "A more descriptive text on what this is about."
                  },
                  "cost": {
                    "type": "number",
                    "description": "The final cost, the payable amount."
                  },
                  "customerId": {
                    "type": "number",
                    "description": "Optionaly, if you know the customer fill in his ID. It will be used as the receiver in the invoice"
                  },
                  "invoiceTypeId": {
                    "type": "number",
                    "description": "Select the invoicetype ID that you want to the resulting invoice"
                  },
                  "netValue": {
                    "type": "number",
                    "description": "Fill in the net value of the link"
                  },
                  "vatId": {
                    "type": "number",
                    "description": "Select the Vat ID that will be applied"
                  },
                  "productId": {
                    "type": "number",
                    "description": "Optionaly, you can select the product ID to be selected as product in the resulting invoice"
                  },
                  "paymentMethodId": {
                    "type": "number",
                    "description": "You need to select the payment method ID that will be used."
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Select the default language of the OCP link form",
                    "example": "el",
                    "enum": [
                      "el",
                      "en"
                    ]
                  },
                  "expirationAt": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The date in ISO format"
                  }
                },
                "required": [
                  "title",
                  "cost",
                  "invoiceTypeId",
                  "netValue",
                  "vatId",
                  "paymentMethodId",
                  "lang",
                  "expirationAt"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "title": "My awesome service",
                    "description": "My monthly support for your company",
                    "cost": 200,
                    "customerId": 10,
                    "invoiceTypeId": 10,
                    "netValue": 20,
                    "vatId": 1,
                    "productId": 141,
                    "paymentMethodId": 141,
                    "lang": "el",
                    "expirationAt": "2021-05-05"
                  }
                }
              }
            }
          }
        },
        "description": "Create a new OCP ( One click payment ) link.\n\n<!-- theme: warning -->\n> You really need to setup an online payment method first through the Billit UI.\n\n<!-- theme: danger -->\n> Make sure to use a payment method sandbox account as well to avoid real charges while testing. \n\n"
      },
      "parameters": []
    },
    "/payments": {
      "get": {
        "summary": "List payments",
        "tags": [
          "Payments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "id": 1000,
                          "invoiceId": 1450,
                          "paymentMethodId": 292,
                          "amount": 132.7,
                          "info": "",
                          "transactionId": null,
                          "apptransactionId": null,
                          "customerId": 694,
                          "paidInvoices": null,
                          "overflowAmount": 0,
                          "dateOccurred": "2021-04-15T00:00:00+00:00",
                          "createdAt": "2021-04-24T12:30:20+00:00",
                          "updatedAt": "2021-04-24T12:30:20+00:00"
                        },
                        {
                          "id": 998,
                          "invoiceId": 1382,
                          "paymentMethodId": 292,
                          "amount": 133.92,
                          "info": "",
                          "transactionId": null,
                          "apptransactionId": null,
                          "customerId": null,
                          "paidInvoices": null,
                          "overflowAmount": 0,
                          "dateOccurred": "2021-03-31T00:00:00+00:00",
                          "createdAt": "2021-03-31T19:11:13+00:00",
                          "updatedAt": "2021-03-31T19:11:13+00:00"
                        }
                      ],
                      "links": {
                        "first": "https://api.billit.io/v1/payments?page=1",
                        "last": "https://api.billit.io/v1/payments?page=11",
                        "prev": null,
                        "next": "https://api.billit.io/v1/payments?page=2"
                      },
                      "meta": {
                        "current_page": 1,
                        "from": 1,
                        "last_page": 11,
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Previous",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=1",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=2",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=3",
                            "label": "3",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=4",
                            "label": "4",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=5",
                            "label": "5",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=6",
                            "label": "6",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=7",
                            "label": "7",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=8",
                            "label": "8",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=9",
                            "label": "9",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=10",
                            "label": "10",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=11",
                            "label": "11",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/payments?page=2",
                            "label": "Next &raquo;",
                            "active": false
                          }
                        ],
                        "path": "https://api.billit.io/v1/payments",
                        "per_page": 20,
                        "to": 20,
                        "total": 219
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        },
        "operationId": "get-payments",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "description": "List payments"
      },
      "post": {
        "summary": "Create a new payment",
        "tags": [
          "Payments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 1000,
                        "invoiceId": 1450,
                        "paymentMethodId": 292,
                        "amount": 132.7,
                        "info": "",
                        "transactionId": null,
                        "apptransactionId": null,
                        "customerId": 694,
                        "paidInvoices": null,
                        "overflowAmount": 0,
                        "dateOccurred": "2021-04-15T00:00:00+00:00",
                        "createdAt": "2021-04-24T12:30:20+00:00",
                        "updatedAt": "2021-04-24T12:30:20+00:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-payments",
        "description": "Create a new payment",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "number",
                    "description": "The customer ID"
                  },
                  "dateOccurred": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Payment Date that occured. In Y-m-d format"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of payment"
                  },
                  "paymentMethod": {
                    "type": "number",
                    "description": "The payment ID that it was used"
                  },
                  "paymentType": {
                    "type": "number",
                    "description": "The payment type. Possible values \"1\" - Auto,\"2\" - Manual,\"3\" - No type"
                  },
                  "amountLeftOver": {
                    "type": "number",
                    "description": "If there is a left over amount, fill it in."
                  },
                  "selectionsAmount": {
                    "type": "number",
                    "description": "The amount that will be used/linked to invoices"
                  },
                  "invoicesPaid": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Invoice ID"
                        },
                        "label": {
                          "type": "number",
                          "description": "The invoice type"
                        },
                        "unpaidAmount": {
                          "type": "number",
                          "description": "The leftover amount of the invoice"
                        },
                        "paymentAmount": {
                          "type": "number",
                          "description": "The amount that you want to be asigned"
                        }
                      },
                      "required": [
                        "id",
                        "label",
                        "unpaidAmount",
                        "paymentAmount"
                      ]
                    }
                  }
                },
                "required": [
                  "customerId",
                  "dateOccurred",
                  "amount",
                  "paymentMethod",
                  "paymentType",
                  "amountLeftOver",
                  "selectionsAmount"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "customerId": 100,
                    "dateOccurred": "2021-05-30",
                    "amount": 100,
                    "paymentMethod": 101,
                    "paymentType": 1,
                    "amountLeftOver": 50,
                    "selectionsAmount": 50,
                    "invoicesPaid": [
                      {
                        "id": 10,
                        "label": 95,
                        "unpaidAmount": 50,
                        "paymentAmount": 50
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/ocps/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show an OCP link",
        "tags": [
          "Ocp"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ocp"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "uuid": "5fee570c-136d-4691-a76e-b08136433da9",
                        "customerId": 726,
                        "title": "test lollypop",
                        "description": "asdf",
                        "productId": null,
                        "paymentmethodId": 483,
                        "cost": 138.99,
                        "vatId": 377,
                        "active": false,
                        "invoiceTypeId": 350,
                        "cleanCost": 123,
                        "locale": "el",
                        "wasSend": false,
                        "permalink": "http://billitio.billit.local/ocpform/5fee570c-136d-4691-a76e-b08136433da9",
                        "tags": [],
                        "sales": [],
                        "expirationAt": "2019-04-11T00:00:00+00:00",
                        "createdAt": "2019-04-06T21:49:34+00:00",
                        "updatedAt": "2019-04-13T21:12:24+00:00",
                        "deletedAt": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-ocps-uuid",
        "description": "Show an ocp link",
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      },
      "put": {
        "summary": "Update OCP link",
        "operationId": "putocps-uuid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ocp"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "uuid": "5fee570c-136d-4691-a76e-b08136433da9",
                        "customerId": 726,
                        "title": "test lollypop",
                        "description": "asdf",
                        "productId": null,
                        "paymentmethodId": 483,
                        "cost": 138.99,
                        "vatId": 377,
                        "active": false,
                        "invoiceTypeId": 350,
                        "netValue": 123,
                        "locale": "el",
                        "wasSend": false,
                        "permalink": "http://billitio.billit.local/ocpform/5fee570c-136d-4691-a76e-b08136433da9",
                        "tags": [],
                        "sales": [],
                        "expirationAt": "2019-04-11T00:00:00+00:00",
                        "createdAt": "2019-04-06T21:49:34+00:00",
                        "updatedAt": "2019-04-13T21:12:24+00:00",
                        "deletedAt": null
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "description": "Update an OCP link",
        "tags": [
          "Ocp"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The title of the ocp link"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1,
                    "description": "A more descriptive text for the ocp link"
                  },
                  "cost": {
                    "type": "number",
                    "description": "The total cost of the link"
                  },
                  "customerId": {
                    "type": "number",
                    "description": "The customer ID if you want to link to a certain one."
                  },
                  "invoiceTypeId": {
                    "type": "number",
                    "description": "The invoicetype ID that will be generated afterwards"
                  },
                  "netValue": {
                    "type": "number",
                    "description": "The net value of the link"
                  },
                  "vatId": {
                    "type": "number",
                    "description": "The Vat ID"
                  },
                  "productId": {
                    "type": "number",
                    "description": "The product ID if used"
                  },
                  "paymentMethodId": {
                    "type": "number",
                    "description": "The payment method ID"
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The language of the link, \"el\" or \"en\""
                  },
                  "expirationAt": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "title",
                  "description",
                  "cost",
                  "netValue",
                  "paymentMethodId",
                  "lang"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "title": "My awesome service",
                    "description": "My monthly support for your company",
                    "cost": 200,
                    "customerId": 10,
                    "invoiceTypeId": 10,
                    "netValue": 20,
                    "vatId": 1,
                    "productId": 141,
                    "paymentMethodId": 141,
                    "lang": "el",
                    "expirationAt": "2021-05-05"
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete OCP link",
        "operationId": "deleteocps-uuid",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete an OCP link",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "tags": [
          "Ocp"
        ]
      }
    },
    "/tags": {
      "get": {
        "summary": "List tags",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "id": 62,
                          "tag": "millit",
                          "description": null
                        },
                        {
                          "id": 44,
                          "tag": "billit",
                          "description": null
                        }
                      ],
                      "links": {
                        "first": "https://api.billit.io/v1/tags?page=1",
                        "last": "https://api.billit.io/v1/tags?page=1",
                        "prev": null,
                        "next": null
                      },
                      "meta": {
                        "current_page": 1,
                        "from": 1,
                        "last_page": 1,
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Previous",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/tags?page=1",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": null,
                            "label": "Next &raquo;",
                            "active": false
                          }
                        ],
                        "path": "https://api.billit.io/v1/tags",
                        "per_page": 20,
                        "to": 9,
                        "total": 9
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-tags",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Get a list of tags"
      },
      "parameters": []
    },
    "/tags/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show a tag",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 44,
                        "tag": "billit",
                        "description": null
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-tags-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "description": "Get a tag by ID",
        "security": [
          {
            "API TOKEN": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a tag",
        "operationId": "deletetags-id",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "description": "Delete a tag",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/customers/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The customer's iD"
        }
      ],
      "get": {
        "summary": "Show a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 694,
                        "email": "drakakis@fantasy.gr",
                        "inCharge": "Δρακάκης",
                        "info": "mynewinfo 123",
                        "company": "ΦΑΝΤΑΣΥ ΤΡΑΒΕΛ ΕΠΕ",
                        "profession": "ΥΠΗΡΕΣΙΕΣ ΔΙΟΡΓΑΝΩΣΗΣ ΠΕΡΙΗΓΗΣΕΩΝ (ΠΡΑΚΤΟΡΕΙΟ ΤΑΞΙΔΙΩΝ) ΓΙΑ ΟΡΓΑΝΩΜΕΝΟ ΤΟΥΡΙΣΜΟ ΑΠΟ ΤΟ ΕΞΩΤΕΡΙΚΟ",
                        "vatId": "095702357",
                        "taxOffice": "Δ΄ ΑΘΗΝΩΝΝ",
                        "streetAddress": "ΦΙΛΕΛΛΗΝΩΝ 19",
                        "city": "ΑΘΗΝΑ",
                        "postalCode": "1231",
                        "phone": "",
                        "mobile": "",
                        "fax": "",
                        "field1": "οκ",
                        "field2": null,
                        "field3": null,
                        "field4": null,
                        "enabled": true,
                        "lang": "el",
                        "discount": 10,
                        "alias": "Εσωτερικού",
                        "debt": 0,
                        "overflowAmount": 462,
                        "total": 1562.5,
                        "unpaid": 9466.16,
                        "createdAt": "2016-07-01T17:03:17+00:00",
                        "updatedAt": "2021-04-22T19:05:42+00:00",
                        "deletedAt": null,
                        "country": "GR",
                        "isCompany": null,
                        "customerType": 1,
                        "publicNote": "μια δημσια δηλωση"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "operationId": "get-customers-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Get a specific customer by ID.",
        "deprecated": true
      },
      "put": {
        "summary": "Update a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "put-customers-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "isCompany": {
                    "type": "boolean"
                  },
                  "company": {
                    "type": "string",
                    "minLength": 1
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1
                  },
                  "profession": {
                    "type": "string",
                    "minLength": 1
                  },
                  "inCharge": {
                    "type": "string",
                    "minLength": 1
                  },
                  "vatId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "taxOffice": {
                    "type": "string",
                    "minLength": 1
                  },
                  "streetAddress": {
                    "type": "string",
                    "minLength": 1
                  },
                  "alias": {
                    "type": "string",
                    "minLength": 1
                  },
                  "customerType": {
                    "type": "number"
                  },
                  "postalCode": {
                    "type": "string",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "minLength": 1
                  },
                  "mobile": {
                    "type": "string",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  },
                  "fax": {
                    "type": "string",
                    "minLength": 1
                  },
                  "info": {
                    "type": "string",
                    "minLength": 1
                  },
                  "publicNote": {
                    "type": "string",
                    "minLength": 1
                  },
                  "addresses": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "title",
                        "address",
                        "city",
                        "zip",
                        "incharge",
                        "tel",
                        "country"
                      ],
                      "properties": {
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "address": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "incharge": {
                          "type": "string",
                          "minLength": 1
                        },
                        "tel": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                },
                "required": [
                  "isCompany",
                  "company",
                  "lang",
                  "profession",
                  "inCharge",
                  "vatId",
                  "taxOffice",
                  "streetAddress",
                  "alias",
                  "customerType",
                  "postalCode",
                  "city",
                  "country",
                  "mobile",
                  "phone",
                  "fax",
                  "info",
                  "publicNote",
                  "addresses"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "isCompany": true,
                    "company": "TestingCompany",
                    "lang": "el",
                    "profession": "Web Dev",
                    "inCharge": "George Tester",
                    "vatId": "EL89991223123",
                    "taxOffice": "A Athens",
                    "streetAddress": "Androutsou",
                    "alias": "Test",
                    "customerType": 1,
                    "postalCode": "12312",
                    "city": "Athens",
                    "country": "GR",
                    "mobile": "69432232323",
                    "phone": "123123123",
                    "fax": "123123123123",
                    "info": "private information text",
                    "publicNote": "public note text",
                    "addresses": [
                      {
                        "title": "Τιτλος 1",
                        "address": "Διευθυνση 1",
                        "city": "Πόλη 1",
                        "zip": "ΤΚ 1",
                        "incharge": "Γιωργος 1",
                        "tel": "210 1",
                        "country": "GR"
                      },
                      {
                        "title": "Τιτλος 2",
                        "address": "Διευθυνση 2",
                        "city": "Πόλη 2",
                        "zip": "ΤΚ 2",
                        "incharge": "Γιωργος 2",
                        "tel": "220 2",
                        "country": "GR"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Update a customer\n\n\n#### customerType options\n| Option | Description |\n| --- | ----------- |\n| 1 | Domestic customer |\n| 2 | Intra-community customer (EU-VIES) |\n| 3 | Foreign customer |\n| 4 | Private individual |",
        "deprecated": true
      },
      "delete": {
        "summary": "Delete a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "delete-customers-id",
        "description": "Delete a customer by ID",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "deprecated": true
      }
    },
    "/contacts/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The customer's iD"
        }
      ],
      "get": {
        "summary": "Show a customer",
        "tags": [
          "Contacts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 694,
                        "email": "drakakis@fantasy.gr",
                        "inCharge": "Δρακάκης",
                        "info": "mynewinfo 123",
                        "company": "ΦΑΝΤΑΣΥ ΤΡΑΒΕΛ ΕΠΕ",
                        "profession": "ΥΠΗΡΕΣΙΕΣ ΔΙΟΡΓΑΝΩΣΗΣ ΠΕΡΙΗΓΗΣΕΩΝ (ΠΡΑΚΤΟΡΕΙΟ ΤΑΞΙΔΙΩΝ) ΓΙΑ ΟΡΓΑΝΩΜΕΝΟ ΤΟΥΡΙΣΜΟ ΑΠΟ ΤΟ ΕΞΩΤΕΡΙΚΟ",
                        "vatId": "095702357",
                        "taxOffice": "Δ΄ ΑΘΗΝΩΝΝ",
                        "streetAddress": "ΦΙΛΕΛΛΗΝΩΝ 19",
                        "city": "ΑΘΗΝΑ",
                        "postalCode": "1231",
                        "phone": "",
                        "mobile": "",
                        "fax": "",
                        "field1": "οκ",
                        "field2": null,
                        "field3": null,
                        "field4": null,
                        "enabled": true,
                        "lang": "el",
                        "discount": 10,
                        "alias": "Εσωτερικού",
                        "debt": 0,
                        "overflowAmount": 462,
                        "total": 1562.5,
                        "unpaid": 9466.16,
                        "createdAt": "2016-07-01T17:03:17+00:00",
                        "updatedAt": "2021-04-22T19:05:42+00:00",
                        "deletedAt": null,
                        "country": "GR",
                        "isCompany": null,
                        "customerType": 1,
                        "publicNote": "μια δημσια δηλωση"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "operationId": "get-customers-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Get a specific contact by ID."
      },
      "put": {
        "summary": "Update a customer",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "put-contacts-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "isCompany": {
                    "type": "boolean"
                  },
                  "company": {
                    "type": "string",
                    "minLength": 1
                  },
                  "lang": {
                    "type": "string",
                    "minLength": 1
                  },
                  "profession": {
                    "type": "string",
                    "minLength": 1
                  },
                  "inCharge": {
                    "type": "string",
                    "minLength": 1
                  },
                  "vatId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "taxOffice": {
                    "type": "string",
                    "minLength": 1
                  },
                  "streetAddress": {
                    "type": "string",
                    "minLength": 1
                  },
                  "alias": {
                    "type": "string",
                    "minLength": 1
                  },
                  "customerType": {
                    "type": "number"
                  },
                  "postalCode": {
                    "type": "string",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "minLength": 1
                  },
                  "mobile": {
                    "type": "string",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  },
                  "fax": {
                    "type": "string",
                    "minLength": 1
                  },
                  "info": {
                    "type": "string",
                    "minLength": 1
                  },
                  "publicNote": {
                    "type": "string",
                    "minLength": 1
                  },
                  "addresses": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "title",
                        "address",
                        "city",
                        "zip",
                        "incharge",
                        "tel",
                        "country"
                      ],
                      "properties": {
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "address": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "incharge": {
                          "type": "string",
                          "minLength": 1
                        },
                        "tel": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                },
                "required": [
                  "isCompany",
                  "company",
                  "lang",
                  "profession",
                  "inCharge",
                  "vatId",
                  "taxOffice",
                  "streetAddress",
                  "alias",
                  "customerType",
                  "postalCode",
                  "city",
                  "country",
                  "mobile",
                  "phone",
                  "fax",
                  "info",
                  "publicNote",
                  "addresses"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "isCompany": true,
                    "company": "TestingCompany",
                    "lang": "el",
                    "profession": "Web Dev",
                    "inCharge": "George Tester",
                    "vatId": "EL89991223123",
                    "taxOffice": "A Athens",
                    "streetAddress": "Androutsou",
                    "alias": "Test",
                    "customerType": 1,
                    "postalCode": "12312",
                    "city": "Athens",
                    "country": "GR",
                    "mobile": "69432232323",
                    "phone": "123123123",
                    "fax": "123123123123",
                    "info": "private information text",
                    "publicNote": "public note text",
                    "addresses": [
                      {
                        "title": "Τιτλος 1",
                        "address": "Διευθυνση 1",
                        "city": "Πόλη 1",
                        "zip": "ΤΚ 1",
                        "incharge": "Γιωργος 1",
                        "tel": "210 1",
                        "country": "GR"
                      },
                      {
                        "title": "Τιτλος 2",
                        "address": "Διευθυνση 2",
                        "city": "Πόλη 2",
                        "zip": "ΤΚ 2",
                        "incharge": "Γιωργος 2",
                        "tel": "220 2",
                        "country": "GR"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Update a contact\n\n\n#### customerType options\n| Option | Description |\n| --- | ----------- |\n| 1 | Domestic customer |\n| 2 | Intra-community customer (EU-VIES) |\n| 3 | Foreign customer |\n| 4 | Private individual |",
        "tags": [
          "Contacts"
        ]
      },
      "delete": {
        "summary": "Delete a customer",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "delete-contacts-id",
        "description": "Delete a contact by ID",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/products/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "124",
            "pattern": "^[0-9]+"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The product's ID"
        }
      ],
      "put": {
        "summary": "Update a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 16,
                        "name": "Web Development",
                        "description": "Web development for Addapp project",
                        "nameSec": "",
                        "descriptionSec": "",
                        "unitPrice": 4000,
                        "defaultVatId": 250,
                        "stock": 0,
                        "withStock": false,
                        "isVatIncluded": false,
                        "ordering": false,
                        "active": false,
                        "bulkjobId": null,
                        "createdAt": "2015-09-03T20:56:24+00:00",
                        "updatedAt": "2016-06-27T09:28:46+00:00",
                        "deletedAt": null
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "put-products-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Update a product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The product/service name"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The product/service description"
                  },
                  "nameSec": {
                    "type": "string",
                    "description": "The product/service in Secondary language"
                  },
                  "descriptionSec": {
                    "type": "string",
                    "description": "The product/service description is secondary language"
                  },
                  "unitPrice": {
                    "type": "number",
                    "description": "The product/service price"
                  },
                  "defaultVatId": {
                    "type": "number",
                    "description": "The default vat ID (It will be autoselected while creating invoice)"
                  },
                  "stock": {
                    "type": "number",
                    "description": "The stock number"
                  },
                  "withStock": {
                    "type": "boolean",
                    "description": "If the product has stock or not"
                  },
                  "isVatIncluded": {
                    "type": "boolean",
                    "description": "Determine if the value includes vat or it's the net one."
                  },
                  "active": {
                    "type": "boolean",
                    "description": "If it's active"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "unitPrice",
                  "defaultVatId",
                  "isVatIncluded"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "name": "Web Development",
                    "description": "Web development for Addapp project",
                    "nameSec": "",
                    "descriptionSec": "",
                    "unitPrice": 4000,
                    "defaultVatId": 250,
                    "stock": 0,
                    "withStock": false,
                    "isVatIncluded": false,
                    "active": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      },
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "delete-products-id",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "description": "Delete a product by ID"
      },
      "get": {
        "summary": "Show a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 16,
                        "name": "Web Development",
                        "description": "Web development for Addapp project",
                        "nameSec": "",
                        "descriptionSec": "",
                        "unitPrice": 4000,
                        "defaultVatId": 250,
                        "stock": 0,
                        "withStock": false,
                        "isVatIncluded": false,
                        "ordering": false,
                        "active": false,
                        "bulkjobId": null,
                        "createdAt": "2015-09-03T20:56:24+00:00",
                        "updatedAt": "2016-06-27T09:28:46+00:00",
                        "deletedAt": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-products-id",
        "description": "Show a product",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      }
    },
    "/purchases": {
      "post": {
        "summary": "Create a new purchase",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Purchase"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": {
                        "id": 838,
                        "info": "",
                        "supplierId": 647,
                        "price": 66.92,
                        "vatAmount": 15.39,
                        "irsAmount": 66.92,
                        "invoiceNum": "1111",
                        "taxOffice": null,
                        "streetAddress": null,
                        "companyExpense": true,
                        "isCredited": false,
                        "paid": false,
                        "irsType": 1,
                        "irsPercent": null,
                        "receiptId": null,
                        "originalPrice": null,
                        "originalVat": null,
                        "originalCurrency": null,
                        "systemCurrency": null,
                        "rate": null,
                        "dateOccurred": "2018-11-02",
                        "datePaid": "2021-04-24",
                        "createdAt": "2018-11-21T14:56:03+00:00",
                        "updatedAt": "2019-08-08T17:26:53+00:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "post-purchases",
        "description": "Create a new purchase",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "supplierId": {
                    "type": "number"
                  },
                  "invoiceNum": {
                    "type": "number"
                  },
                  "vatAmount": {
                    "type": "number"
                  },
                  "cleanAmount": {
                    "type": "number"
                  },
                  "dateOccurred": {
                    "type": "string",
                    "minLength": 1
                  },
                  "irsAmount": {
                    "type": "number"
                  },
                  "irsType": {
                    "type": "number"
                  }
                },
                "required": [
                  "supplierId",
                  "invoiceNum",
                  "vatAmount",
                  "cleanAmount",
                  "dateOccurred",
                  "irsAmount",
                  "irsType"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "supplierId": 10,
                    "invoiceNum": 101,
                    "vatAmount": 24,
                    "cleanAmount": 100,
                    "dateOccurred": "2021-09-08",
                    "irsAmount": 100,
                    "irsType": 1
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Purchases"
        ]
      },
      "get": {
        "summary": "List of purchases",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": [
                        "string",
                        "array"
                      ],
                      "items": {
                        "$ref": "#/components/schemas/Purchase"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "id": 838,
                          "info": "",
                          "supplierId": 647,
                          "price": 66.92,
                          "vatAmount": 15.39,
                          "irsAmount": 66.92,
                          "invoiceNum": "1111",
                          "taxOffice": null,
                          "streetAddress": null,
                          "companyExpense": true,
                          "isCredited": false,
                          "paid": false,
                          "irsType": 1,
                          "irsPercent": null,
                          "receiptId": null,
                          "originalPrice": null,
                          "originalVat": null,
                          "originalCurrency": null,
                          "systemCurrency": null,
                          "rate": null,
                          "dateOccurred": "2018-11-02",
                          "datePaid": "2021-04-24",
                          "createdAt": "2018-11-21T14:56:03+00:00",
                          "updatedAt": "2019-08-08T17:26:53+00:00"
                        },
                        {
                          "id": 831,
                          "info": "asdf",
                          "supplierId": 627,
                          "price": 100,
                          "vatAmount": 20,
                          "irsAmount": 0,
                          "invoiceNum": "1564",
                          "taxOffice": "asdf",
                          "streetAddress": "asdf",
                          "companyExpense": true,
                          "isCredited": true,
                          "paid": true,
                          "irsType": 1,
                          "irsPercent": null,
                          "receiptId": null,
                          "originalPrice": null,
                          "originalVat": null,
                          "originalCurrency": null,
                          "systemCurrency": null,
                          "rate": null,
                          "dateOccurred": "2018-07-20",
                          "datePaid": "2021-04-24",
                          "createdAt": "2018-07-20T19:52:33+00:00",
                          "updatedAt": "2018-07-20T19:52:33+00:00"
                        }
                      ],
                      "links": {
                        "first": "https://api.billit.io/v1/purchases?page=1",
                        "last": "https://api.billit.io/v1/purchases?page=1",
                        "prev": null,
                        "next": null
                      },
                      "meta": {
                        "current_page": 1,
                        "from": 1,
                        "last_page": 1,
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Previous",
                            "active": false
                          },
                          {
                            "url": "https://api.billit.io/v1/purchases?page=1",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": null,
                            "label": "Next &raquo;",
                            "active": false
                          }
                        ],
                        "path": "https://api.billit.io/v1/purchases",
                        "per_page": 20,
                        "to": 19,
                        "total": 19
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-purchases",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "description": "Get a list of purchases",
        "tags": [
          "Purchases"
        ]
      }
    },
    "/purchases/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show a purchase",
        "tags": [
          "Purchases"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Purchase"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-purchases-id",
        "description": "Show a Purchase",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      },
      "delete": {
        "summary": "Delete a purchase",
        "tags": [
          "Purchases"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "delete-purchases-id",
        "description": "Delete a Purchase",
        "security": [
          {
            "API TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Accept"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "",
        "x-examples": {
          "Alice Smith": {
            "id": 142,
            "firstName": "Alice",
            "lastName": "Smith",
            "email": "alice.smith@gmail.com",
            "dateOfBirth": "1997-10-31",
            "emailVerified": true,
            "signUpDate": "2019-08-24"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "A valid email address of the user"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1997-10-31",
            "description": "The birthdate in Y-m-d format"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Set to true if the user's email has been verified."
          },
          "createDate": {
            "type": "string",
            "format": "date",
            "description": "The date that the user was created."
          }
        }
      },
      "Invoice": {
        "description": "Invoice model in billit.",
        "type": "object",
        "x-examples": {
          "example": {
            "user_id": 92,
            "uuid": "f7234af9-1f67-48d3-98b6-22813b3a935f",
            "permalink": "https://billitio.billit.local/inv/f7234af9-1f67-48d3-98b6-22813b3a935f",
            "number": 401,
            "note": "general note eng",
            "amount": 100,
            "vatAmount": 0,
            "finalAmount": 100,
            "payableAmount": 100,
            "discountedAmount": 0,
            "restAmount": 100,
            "isPaid": false,
            "layoutLang": "EN",
            "paymentMethodIds": [
              0
            ],
            "templateId": 0,
            "hideItemNum": false,
            "isRecurring": false,
            "isSend": false,
            "isRead": false,
            "dateIssued": "2021-04-22",
            "dateExpires": null,
            "dateRead": null,
            "tags": [],
            "isMydataEnabled": true,
            "type": {
              "id": 349,
              "name": "INVOICE",
              "subtitle": "",
              "note": "general note eng",
              "alias": null,
              "series": null
            },
            "biller": {
              "id": 224,
              "company": "BILLIT GP",
              "info": null,
              "profession": "Web development",
              "taxId": "EL801379527",
              "taxOffice": "N.Σμύρνη",
              "streetAddress": "Tsamaous",
              "city": "Piraeus",
              "postCode": "18538",
              "phone": "21023123",
              "mobile": "123123",
              "url": "https://billit.io/en",
              "urlLabel": null,
              "country": "GR",
              "freeText": "<p>free text enlighs</p>"
            },
            "customer": {
              "id": 644,
              "email": "info@artspot.gr",
              "company": "ARTSPOT  L.T.D",
              "profession": "art promotions",
              "taxId": "998039738",
              "taxOffice": "Α΄ΠΕΙΡΑΙΑ",
              "streetAddress": "Voulgari 23",
              "city": "Piraeus",
              "country": "AS",
              "postCode": "18533",
              "phone": "",
              "mobile": "",
              "isCompany": true,
              "field1": "test",
              "field2": null,
              "field3": null,
              "field4": null
            },
            "items": [
              {
                "quantity": 1,
                "measurementUnitId": 1,
                "product": {
                  "id": 56,
                  "title": null,
                  "description": "test"
                },
                "netAmount": 100,
                "vatAmount": 0,
                "totalAmount": 100,
                "discountPercent": 0,
                "discountAmount": 0,
                "undiscountedTotalAmount": 100,
                "vatId": 526,
                "vatPercent": 0,
                "mydata": {
                  "vatCat": null,
                  "vatExemptionCat": 6,
                  "dienergia": null,
                  "discountOption": null,
                  "withheldAmount": null,
                  "withheldPercentCat": null,
                  "stampDutyAmount": null,
                  "stampDutyPercent_cat": null,
                  "feesAmount": null,
                  "feesPercentCat": null,
                  "otherTaxesAmount": null,
                  "otherTaxesPercent_cat": null,
                  "deductionsAmount": null,
                  "lineComments": null,
                  "incomeClassificationType": [
                    {
                      "id": 1,
                      "type": "E3_561_006",
                      "amount": 100,
                      "category": "category1_3"
                    }
                  ],
                  "expensesClassificationType": null,
                  "rowType": null
                }
              }
            ],
            "mydata": {
              "type": "2.3",
              "state": 1,
              "errors": null,
              "branch": 0,
              "invoiceUid": null,
              "invoiceMark": null,
              "transmissionFailure": null,
              "selfPricing": null,
              "classificationMark": null,
              "authenticationCode": null,
              "canceledByMark": null,
              "incomeClassification": null,
              "expenseClassification": null,
              "dienergia": null,
              "mydataPaymentType": [
                {
                  "type": 5,
                  "amount": 100,
                  "paymentMethodInfo": ""
                }
              ]
            },
            "dispatchDate": null,
            "dispatchTime": null,
            "vehicleNumber": null,
            "movePurpose": null,
            "loadingPlace": null,
            "destination": null,
            "correlatedInvoices": [],
            "taxTotals": [],
            "totalWithheldAmount": 0,
            "totalFeesAmount": 0,
            "totalStampDutyAmount": 0,
            "totalOtherTaxesAmount": 0,
            "totalDeductionsAmount": 0,
            "vatList": [
              {
                "name": "0%",
                "value": 0
              }
            ],
            "offlinePaymentMethods": [
              {
                "label": "Cash",
                "value": "<p>Payment in headquarters</p>"
              }
            ],
            "onlinePaymentMethods": [
              {
                "id": 482,
                "name": "Τραπεζα Πειραιώς [online]",
                "gatewayId": 5
              },
              {
                "id": 483,
                "name": "BrainTree [online]",
                "gatewayId": 3
              },
              {
                "id": 491,
                "name": "Paypal [online]",
                "gatewayId": 2
              }
            ],
            "templateExtras": {
              "logo": "https://app.billit.local/uploads/logos/92/billit-other.png",
              "templateName": "minimal",
              "multiLang": 1,
              "dateFormat": "d-m-Y",
              "currency": "EUR",
              "currencySymbol": "€",
              "currencyPos": 1,
              "customerDept": false,
              "allowPayments": true,
              "hideTmx": false,
              "hideReceiver": false,
              "hidePricing": false,
              "showBalance": false,
              "hasSigningbox": true,
              "extraFieldsLabels": [
                "testen"
              ]
            },
            "createdAt": "2021-04-22T19:06:38+00:00",
            "updatedAt": "2021-04-23T16:10:51+00:00",
            "deletedAt": "2021-04-23T16:10:51+00:00"
          }
        },
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 1,
            "description": "Unique identifier"
          },
          "permalink": {
            "type": "string",
            "minLength": 1,
            "description": "The invoice url. You can append \"/pdf\" to get the pdf version."
          },
          "number": {
            "type": "number",
            "description": "The invoice number"
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "The invoice type ID"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "description": "The Friendly name of the type"
              },
              "subtitle": {
                "type": "string",
                "description": "The subtitle of the type"
              },
              "note": {
                "type": [
                  "string"
                ],
                "description": "A general always shown note",
                "nullable": true
              },
              "alias": {
                "type": "string",
                "minLength": 1,
                "description": "A short version of the type. Ex: Τ.Π.Υ"
              },
              "series": {
                "type": [
                  "string"
                ],
                "description": "The invoice type series",
                "nullable": true
              }
            }
          },
          "biller": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "The biller's ID"
              },
              "company": {
                "type": "string",
                "minLength": 1,
                "description": "Biller's company name"
              },
              "info": {
                "type": "string",
                "description": "private info text"
              },
              "profession": {
                "type": "string",
                "minLength": 1,
                "description": "The profession of the company"
              },
              "taxId": {
                "type": "string",
                "minLength": 1,
                "description": "The Tax ID"
              },
              "taxOffice": {
                "type": "string",
                "minLength": 1,
                "description": "The tax Office if available"
              },
              "streetAddress": {
                "type": "string",
                "minLength": 1,
                "description": "The physical address of the Biller's company"
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "description": "The city"
              },
              "postCode": {
                "type": "string",
                "minLength": 1,
                "description": "The post code"
              },
              "phone": {
                "type": "string",
                "minLength": 1,
                "description": "The phone of the Biller"
              },
              "mobile": {
                "type": "string",
                "description": "The mobile phone"
              },
              "url": {
                "type": "string",
                "minLength": 1,
                "description": "The website url of the Biller"
              },
              "urlLabel": {
                "type": "string",
                "minLength": 1,
                "description": "The website friendly label for the url"
              },
              "country": {
                "type": "string",
                "minLength": 1,
                "description": "ISO 3166-1 alpha-2 code"
              },
              "freeText": {
                "type": "string",
                "minLength": 1,
                "description": "Html block"
              }
            }
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Customer's ID"
              },
              "email": {
                "type": "string",
                "minLength": 1,
                "description": "Emaill address"
              },
              "company": {
                "type": "string",
                "minLength": 1,
                "description": "Company name or Full Name (if individual)"
              },
              "profession": {
                "type": "string",
                "minLength": 1,
                "description": "The profession"
              },
              "taxId": {
                "type": "string",
                "minLength": 1,
                "description": "The tax ID"
              },
              "taxOffice": {
                "type": "string",
                "minLength": 1,
                "description": "The Tax office of the customer"
              },
              "streetAddress": {
                "type": "string",
                "minLength": 1,
                "description": "The physical address"
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "description": "The city"
              },
              "country": {
                "type": "string",
                "minLength": 1,
                "description": "ISO 3166-1 alpha-2 code"
              },
              "postCode": {
                "type": "string",
                "minLength": 1,
                "description": "THe postal code"
              },
              "phone": {
                "type": "string",
                "description": "The phone naumber"
              },
              "mobile": {
                "type": "string",
                "description": "The mobile phone"
              },
              "isCompany": {
                "type": "boolean",
                "description": "Set if it's a company"
              },
              "field1": {
                "type": "string",
                "minLength": 1,
                "description": "custom field 1"
              },
              "field2": {
                "description": "custom field 2",
                "type": "string"
              },
              "field3": {
                "description": "custom field 3",
                "type": "string"
              },
              "field4": {
                "description": "custom field 4",
                "type": "string"
              }
            }
          },
          "items": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                },
                "measurementUnitId": {
                  "type": "number"
                },
                "product": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "title": {
                      "type": "string",
                      "minLength": 1
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "netAmount": {
                  "type": "number"
                },
                "vatAmount": {
                  "type": "number"
                },
                "totalAmount": {
                  "type": "number"
                },
                "discountPercent": {
                  "type": "number"
                },
                "discountAmount": {
                  "type": "number"
                },
                "undiscountedTotalAmount": {
                  "type": "number"
                },
                "vatId": {
                  "type": "number"
                },
                "vatPercent": {
                  "type": "number"
                },
                "mydata": {
                  "type": "object",
                  "properties": {
                    "vatCat": {},
                    "vatExemptionCat": {},
                    "dienergia": {},
                    "discountOption": {},
                    "withheldAmount": {},
                    "withheldPercentCat": {},
                    "stampDutyAmount": {},
                    "stampDutyPercent_cat": {},
                    "feesAmount": {},
                    "feesPercentCat": {},
                    "otherTaxesAmount": {},
                    "otherTaxesPercent_cat": {},
                    "deductionsAmount": {},
                    "lineComments": {},
                    "incomeClassificationType": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "amount": {
                            "type": "number"
                          },
                          "category": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "amount",
                          "category"
                        ]
                      }
                    },
                    "expensesClassificationType": {},
                    "rowType": {}
                  }
                }
              }
            }
          },
          "note": {
            "type": "string",
            "minLength": 1,
            "description": "The invoice public note"
          },
          "amount": {
            "type": "number",
            "description": "The net amount of the invoice"
          },
          "vatAmount": {
            "type": "number",
            "description": "The vat amount"
          },
          "finalAmount": {
            "type": "number",
            "description": "The final amount"
          },
          "payableAmount": {
            "type": "number",
            "description": "The payable amount, after applier taxes"
          },
          "discountedAmount": {
            "type": "number",
            "description": "The discounted amount"
          },
          "restAmount": {
            "type": "number",
            "description": "The amount that is not paid"
          },
          "isPaid": {
            "type": "boolean",
            "description": "Invoice paid status"
          },
          "layoutLang": {
            "type": "string",
            "minLength": 1,
            "description": "The language of the invoice. \"GR\" or \"EN\""
          },
          "paymentMethodIds": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "templateId": {
            "type": "number",
            "description": "If template is used, add the ID"
          },
          "hideItemNum": {
            "type": "boolean",
            "description": "if Numbering is hidden from products"
          },
          "isRecurring": {
            "type": "boolean",
            "description": "If it is scheduled"
          },
          "isSend": {
            "type": "boolean",
            "description": "If it was send by email"
          },
          "isRead": {
            "type": "boolean",
            "description": "If the email was opened/read"
          },
          "dateIssued": {
            "type": "string",
            "minLength": 1,
            "description": "Date format Y-m-d"
          },
          "dateExpires": {
            "type": "string",
            "description": "Date format Y-m-d"
          },
          "dateRead": {
            "type": "string",
            "description": "Date format Y-m-d"
          },
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format"
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format"
          },
          "deletedAt": {
            "type": [
              "string"
            ],
            "description": "ISO 8601 format",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "description": "Tags attached to invoice",
            "items": {
              "type": "object"
            }
          },
          "isMydataEnabled": {
            "type": "boolean",
            "description": "If Mydata is enabled for this invoice"
          },
          "mydata": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1,
                "description": "Mydata type according the spec",
                "example": "2.1"
              },
              "state": {
                "description": "The myData status",
                "type": "string"
              },
              "errors": {},
              "branch": {
                "type": "number"
              },
              "invoiceUid": {},
              "invoiceMark": {},
              "transmissionFailure": {},
              "selfPricing": {},
              "classificationMark": {},
              "authenticationCode": {},
              "canceledByMark": {},
              "incomeClassification": {},
              "expenseClassification": {},
              "dienergia": {},
              "mydataPaymentType": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "paymentMethodInfo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "dispatchDate": {},
          "dispatchTime": {},
          "vehicleNumber": {},
          "movePurpose": {},
          "loadingPlace": {},
          "destination": {},
          "correlatedInvoices": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "taxTotals": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "totalWithheldAmount": {
            "type": "number"
          },
          "totalFeesAmount": {
            "type": "number"
          },
          "totalStampDutyAmount": {
            "type": "number"
          },
          "totalOtherTaxesAmount": {
            "type": "number"
          },
          "totalDeductionsAmount": {
            "type": "number"
          },
          "vatList": {},
          "offlinePaymentMethods": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "minLength": 1
                },
                "value": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "onlinePaymentMethods": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "gatewayId": {
                  "type": "number"
                }
              }
            }
          },
          "templateExtras": {
            "type": "object",
            "properties": {
              "logo": {
                "type": "string",
                "minLength": 1
              },
              "templateName": {
                "type": "string",
                "minLength": 1
              },
              "multiLang": {
                "type": "number"
              },
              "dateFormat": {
                "type": "string",
                "minLength": 1
              },
              "currency": {
                "type": "string",
                "minLength": 1
              },
              "currencySymbol": {
                "type": "string",
                "minLength": 1
              },
              "currencyPos": {
                "type": "number"
              },
              "customerDept": {
                "type": "boolean"
              },
              "allowPayments": {
                "type": "number"
              },
              "hideTmx": {
                "type": "boolean"
              },
              "hideReceiver": {
                "type": "boolean"
              },
              "hidePricing": {
                "type": "boolean"
              },
              "showBalance": {
                "type": "boolean"
              },
              "hasSigningbox": {
                "type": "boolean"
              },
              "extraFieldsLabels": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "Links": {
        "description": "",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "minLength": 1
          },
          "last": {
            "type": "string",
            "minLength": 1
          },
          "prev": {},
          "next": {
            "type": "string",
            "minLength": 1
          }
        },
        "title": "links"
      },
      "Meta": {
        "description": "",
        "type": "object",
        "properties": {
          "current_page": {
            "type": "number"
          },
          "from": {
            "type": "number"
          },
          "last_page": {
            "type": "number"
          },
          "links": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "url": {},
                "label": {
                  "type": "string",
                  "minLength": 1
                },
                "active": {
                  "type": "boolean"
                }
              }
            }
          },
          "path": {
            "type": "string",
            "minLength": 1
          },
          "per_page": {
            "type": "number"
          },
          "to": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "InvoiceListItem": {
        "description": "",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 1,
            "description": "Unique identifier",
            "readOnly": true
          },
          "billerId": {
            "type": "number",
            "description": "Biller's ID"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Customer's ID"
              },
              "email": {
                "type": "string",
                "minLength": 1,
                "description": "Customer's email"
              },
              "company": {
                "type": "string",
                "minLength": 1,
                "description": "Customer's company name"
              },
              "isCompany": {
                "type": "boolean",
                "description": "If is company or individual"
              }
            }
          },
          "number": {
            "type": "number",
            "description": "The invoice number"
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Invoicetype ID"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "description": "invoicetype name"
              },
              "alias": {
                "description": "Short alias of invoiceType",
                "type": "string"
              },
              "series": {
                "description": "The series of the invoicetype",
                "type": "string"
              }
            }
          },
          "note": {
            "type": "string",
            "description": "The public note, if any."
          },
          "amount": {
            "type": "number",
            "description": "The net amount"
          },
          "vatAmount": {
            "type": "number",
            "description": "The vat amount"
          },
          "finalAmount": {
            "type": "number",
            "description": "The total amount"
          },
          "payableAmount": {
            "type": "number",
            "description": "The payable amount, after taxes"
          },
          "restAmount": {
            "type": "number",
            "description": "The unpaid ( if any ) amount of invoice"
          },
          "isPaid": {
            "type": "boolean",
            "description": "Paid status of invoice"
          },
          "layoutLang": {
            "type": "string",
            "minLength": 1,
            "description": "The language of the invoce, GR or EN"
          },
          "paymentMethodIds": {
            "type": "array",
            "description": "Paymentmethods Id's",
            "items": {}
          },
          "templateId": {
            "type": "number",
            "description": "If customer template is used, fill in the ID"
          },
          "hideItemNum": {
            "type": "boolean",
            "description": "Hide item numbering"
          },
          "isRecurring": {
            "type": "boolean",
            "description": "If was setup as recurring (scheduled)"
          },
          "isSend": {
            "type": "boolean",
            "description": "If is send to the client by email"
          },
          "isRead": {
            "type": "boolean",
            "description": " the client has read/open the email"
          },
          "dateIssued": {
            "type": "string",
            "minLength": 1,
            "format": "date",
            "description": "Date Format Y-m-d"
          },
          "dateExpires": {
            "type": "string",
            "format": "date",
            "description": "Date Format Y-m-d"
          },
          "dateRead": {
            "type": "string",
            "description": "Date Format Y-m-d",
            "format": "date"
          },
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "ISO 8601 format"
          },
          "deletedAt": {
            "type": [
              "string"
            ],
            "description": "ISO 8601 format",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "isMydataEnabled": {
            "type": "boolean",
            "description": "If mydata is enabled for this invoice"
          },
          "correlatedInvoices": {
            "type": "array",
            "description": "Correlated invoices if any",
            "items": {
              "type": "object"
            }
          },
          "permalink": {
            "type": "string",
            "format": "uri",
            "description": "The public URL for invoice",
            "readOnly": true
          }
        }
      },
      "Customer": {
        "description": "",
        "type": "object",
        "title": "",
        "properties": {
          "id": {
            "type": "number",
            "description": "Customer's Unique Identifier",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address. Mandatory if you're using the \"send invoice by email\" feature."
          },
          "inCharge": {
            "type": "string",
            "description": "Full name of person in charge"
          },
          "info": {
            "type": "string",
            "description": "Private note for customer"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "profession": {
            "type": "string",
            "description": "Company's field/profession. Applicable in some countries"
          },
          "vatId": {
            "type": "string",
            "description": "Company's VatID"
          },
          "taxOffice": {
            "type": "string",
            "description": "Tax Office"
          },
          "streetAddress": {
            "type": "string",
            "description": "The physical address of the company"
          },
          "city": {
            "type": "string",
            "description": "The city that the company is located"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code"
          },
          "phone": {
            "type": "string",
            "description": "The company's telephone"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "field1": {
            "type": "string",
            "description": "Custom field 1",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "description": "Custom field 2",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "description": "Custom field 3",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "description": "Custom field 4",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Is customer enabled?"
          },
          "lang": {
            "type": "string",
            "enum": [
              "el",
              "en"
            ],
            "description": "Choose the language you want the customer to receive his invoices."
          },
          "discount": {
            "type": "number",
            "description": "Pre select a discount percentage each time you create an invoice for this customer"
          },
          "alias": {
            "type": "string",
            "description": "A friendly short name that you identify the customer."
          },
          "debt": {
            "type": "number",
            "description": "Previous debt/balance of customer, before inserting him in the app."
          },
          "overflowAmount": {
            "type": "number",
            "description": "Overflow amount of account",
            "readOnly": true
          },
          "total": {
            "type": "number",
            "description": "Customer's total balance",
            "readOnly": true
          },
          "unpaid": {
            "type": "number",
            "description": "Customer unpaid amount "
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 format",
            "nullable": true
          },
          "country": {
            "type": "string",
            "example": "GR",
            "description": "ISO 3166-1 alpha-2 code",
            "minLength": 2,
            "maxLength": 2
          },
          "isCompany": {
            "type": "boolean",
            "description": "Customer is a company or an individual"
          },
          "customerType": {
            "type": "number",
            "enum": [
              1,
              2,
              3
            ],
            "description": "1 - Local, 2 - EU(VIES), 3 - Abroad"
          },
          "publicNote": {
            "type": "string",
            "minLength": 1,
            "description": "This note will be publicly available in the \"notes\" section of an invoice"
          },
          "currency": {
            "type": "string"
          },
          "contactType": {
            "type": "number",
            "enum": [
              1,
              2,
              3
            ]
          }
        },
        "required": [
          "id",
          "country",
          "customerType"
        ]
      },
      "Biller": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Biller's unique ID",
            "readOnly": true
          },
          "company": {
            "type": "string",
            "description": "Biller's name / company"
          },
          "companySec": {
            "type": "string",
            "minLength": 1,
            "description": "Biller name in secondary language"
          },
          "profession": {
            "type": "string",
            "minLength": 1,
            "description": "Biller Profession"
          },
          "professionSec": {
            "type": "string",
            "minLength": 1,
            "description": "Biller profession in secondary language"
          },
          "vatId": {
            "type": "string",
            "description": "Biller's vat ID",
            "minLength": 9
          },
          "taxOffice": {
            "type": "string",
            "minLength": 1,
            "description": "Biller's tax office"
          },
          "streetAddress": {
            "type": "string",
            "minLength": 1,
            "description": "The physical street address"
          },
          "streetAddressSec": {
            "type": "string",
            "minLength": 1,
            "description": "The physical street address in secondary language"
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "description": "Biller's city"
          },
          "citySec": {
            "type": "string",
            "minLength": 1,
            "description": "Biller's city in secondary language"
          },
          "postalCode": {
            "type": "string",
            "minLength": 1,
            "description": "Postal code"
          },
          "phone": {
            "type": "string",
            "minLength": 1,
            "description": "Phone number"
          },
          "phoneSec": {
            "type": "string",
            "minLength": 1,
            "description": "Phone number in secodary language"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone number"
          },
          "mobileSec": {
            "type": "string",
            "minLength": 1,
            "description": "Mobile phone number in secondary language"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "logo": {
            "type": "string",
            "minLength": 1,
            "description": "The full URL of the biller's logo"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "description": "Full url of the Biller's website"
          },
          "urlSec": {
            "type": "string",
            "minLength": 1,
            "description": "Full url of the Biller's website in secondary language"
          },
          "urlLabel": {
            "type": "string",
            "minLength": 1,
            "description": "A friendly name for website"
          },
          "country": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 3166-1 alpha-2 code"
          },
          "freeText": {
            "type": "string",
            "minLength": 1,
            "description": "Html block with extra info"
          },
          "freeTextSec": {
            "type": "string",
            "minLength": 1,
            "description": "Html block with extra info in secondary language"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          }
        },
        "required": [
          "company",
          "vatId",
          "postalCode",
          "country"
        ]
      },
      "Payment": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 994,
            "invoiceId": 1181,
            "paymentMethodId": 483,
            "amount": 123,
            "info": "",
            "transactionId": null,
            "apptransactionId": null,
            "customerId": 694,
            "paidInvoices": null,
            "overflowAmount": 0,
            "dateOccurred": "2021-01-04T00:00:00+00:00",
            "createdAt": "2021-01-04T08:48:01+00:00",
            "updatedAt": "2021-01-04T08:48:01+00:00"
          }
        },
        "properties": {
          "id": {
            "type": "number"
          },
          "invoiceId": {
            "type": "number"
          },
          "paymentMethodId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "info": {
            "type": "string"
          },
          "transactionId": {},
          "apptransactionId": {},
          "customerId": {
            "type": "number"
          },
          "paidInvoices": {},
          "overflowAmount": {
            "type": "number"
          },
          "dateOccurred": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format"
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format"
          }
        }
      },
      "Supplier": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example": {
            "data": {
              "id": 626,
              "company": "Kalampakopoulos Solutions L.T.D.",
              "info": "private information",
              "profession": "Printing solutions",
              "vatId": "123123123123",
              "taxOffice": "asdfasdf",
              "streetAddress": "asdfa 123",
              "city": "Piraeus",
              "zipCode": "15854",
              "phone": "213131313",
              "mobile": "6983412312",
              "fax": "6983412312",
              "email": "test@test.com",
              "url": "http://www.calabac-test.com",
              "enabled": true,
              "alias": "Calabac",
              "currency": "EUR",
              "country": "GR",
              "createdAt": "2018-05-17T12:29:57+00:00",
              "updatedAt": "2020-01-16T10:45:37+00:00",
              "deletedAt": null
            }
          }
        },
        "properties": {
          "id": {
            "type": "number"
          },
          "company": {
            "type": "string",
            "minLength": 1
          },
          "info": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "vatId": {
            "type": "string",
            "minLength": 1
          },
          "taxOffice": {
            "type": "string",
            "minLength": 1
          },
          "streetAddress": {
            "type": "string",
            "minLength": 1
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "minLength": 1
          },
          "country": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "deletedAt": {
            "type": [
              "string"
            ],
            "description": "ISO 8601 format",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "Ocp": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example": {
            "data": {
              "uuid": "5fee570c-136d-4691-a76e-b08136433da9",
              "customerId": 726,
              "title": "test lollypop",
              "description": "asdf",
              "productId": null,
              "paymentmethodId": 483,
              "cost": 138.99,
              "vatId": 377,
              "active": false,
              "invoiceTypeId": 350,
              "netValue": 123,
              "locale": "el",
              "wasSend": false,
              "permalink": "http://billitio.billit.local/ocpform/5fee570c-136d-4691-a76e-b08136433da9",
              "tags": [],
              "sales": [],
              "expirationAt": "2019-04-11T00:00:00+00:00",
              "createdAt": "2019-04-06T21:49:34+00:00",
              "updatedAt": "2019-04-13T21:12:24+00:00",
              "deletedAt": null
            }
          }
        },
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 1
          },
          "customerId": {
            "type": "number"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "productId": {},
          "returnUrl": {
            "type": "string"
          },
          "paymentmethodId": {
            "type": "number"
          },
          "cost": {
            "type": "number"
          },
          "vatId": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          },
          "invoiceTypeId": {
            "type": "number"
          },
          "netValue": {
            "type": "number"
          },
          "locale": {
            "type": "string",
            "minLength": 1
          },
          "wasSend": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "sales": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "expirationAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "ISO 8601 format"
          },
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "deletedAt": {
            "type": "string",
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Tag": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 0,
            "tag": "a tag",
            "description": "This is a testing tag"
          }
        },
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique id of the tag"
          },
          "tag": {
            "type": "string",
            "minLength": 1,
            "description": "The tag name"
          },
          "description": {
            "description": "A description of the tag"
          }
        },
        "required": [
          "tag"
        ]
      },
      "Product": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example": {
            "data": {
              "id": 16,
              "name": "Web Development",
              "description": "Web development for Addapp project",
              "nameSec": "",
              "descriptionSec": "",
              "unitPrice": 4000,
              "defaultVatId": 250,
              "stock": 0,
              "withStock": false,
              "isVatIncluded": false,
              "ordering": false,
              "active": false,
              "bulkjobId": null,
              "createdAt": "2015-09-03T20:56:24+00:00",
              "updatedAt": "2016-06-27T09:28:46+00:00",
              "deletedAt": null
            }
          }
        },
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "nameSec": {
            "type": "string"
          },
          "descriptionSec": {
            "type": "string"
          },
          "unitPrice": {
            "type": "number"
          },
          "defaultVatId": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          },
          "withStock": {
            "type": "boolean"
          },
          "isVatIncluded": {
            "type": "boolean"
          },
          "ordering": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "bulkjobId": {},
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          },
          "deletedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "ISO 8601 format",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "Purchase": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 838,
            "info": "",
            "supplierId": 647,
            "price": 66.92,
            "vatAmount": 15.39,
            "irsAmount": 66.92,
            "invoiceNum": "1111",
            "taxOffice": null,
            "streetAddress": null,
            "companyExpense": true,
            "isCredited": false,
            "paid": false,
            "irsType": 1,
            "irsPercent": null,
            "receiptId": null,
            "originalPrice": null,
            "originalVat": null,
            "originalCurrency": null,
            "systemCurrency": null,
            "rate": null,
            "dateOccurred": "2018-11-02",
            "datePaid": "2021-04-19",
            "createdAt": "2018-11-21T14:56:03+00:00",
            "updatedAt": "2019-08-08T17:26:53+00:00"
          }
        },
        "properties": {
          "id": {
            "type": "number"
          },
          "info": {
            "type": "string"
          },
          "supplierId": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "irsAmount": {
            "type": "number"
          },
          "invoiceNum": {
            "type": "string",
            "minLength": 1
          },
          "taxOffice": {},
          "streetAddress": {},
          "companyExpense": {
            "type": "boolean"
          },
          "isCredited": {
            "type": "boolean"
          },
          "paid": {
            "type": "boolean"
          },
          "irsType": {
            "type": "number"
          },
          "irsPercent": {},
          "receiptId": {},
          "originalPrice": {},
          "originalVat": {},
          "originalCurrency": {},
          "systemCurrency": {},
          "rate": {},
          "dateOccurred": {
            "type": "string",
            "minLength": 1,
            "format": "date"
          },
          "datePaid": {
            "type": "string",
            "minLength": 1,
            "format": "date"
          },
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Paymentmethod": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "nameSec": {},
          "info": {},
          "infoSec": {},
          "isOnlineMethod": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "iban": {},
          "bic": {},
          "accountHolder": {},
          "createdAt": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "ISO 8601 format",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "deletedAt": {
            "type": [
              "string"
            ],
            "description": "ISO 8601 format",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "required": [
          "id",
          "name",
          "isOnlineMethod",
          "status",
          "default"
        ]
      },
      "Vat": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Vat ID"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Vat friendly name"
          },
          "value": {
            "type": "number",
            "description": "Vat value (%)"
          },
          "description": {
            "type": "string",
            "description": "A description if needed"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Set as default while being used from resources"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Hide from the dropdown menus because it's inactive."
          },
          "mydataVatCat": {
            "type": "number",
            "description": "The mydata Category"
          },
          "operand": {
            "type": "string",
            "description": "The operand of the vat",
            "enum": [
              "+",
              "-"
            ],
            "readOnly": true
          },
          "isPercentable": {
            "type": "boolean",
            "description": "If the type is Percentable or not"
          },
          "taxId": {
            "type": "number",
            "description": "The linked taxId"
          },
          "deletedAt": {
            "type": [
              "string"
            ],
            "description": "ISO 8601 format",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Setting": {
        "description": "",
        "type": "object",
        "properties": {
          "dateFormat": {
            "type": "string",
            "minLength": 1
          },
          "currency": {
            "type": "string",
            "minLength": 1
          },
          "currencySymbol": {
            "type": "string",
            "minLength": 1
          },
          "defaultInvoiceType": {
            "type": "number"
          },
          "defaultTemplate": {
            "type": "string",
            "minLength": 1
          },
          "appLanguage": {
            "type": "string",
            "minLength": 1
          },
          "multiLanguage": {
            "type": "boolean"
          },
          "incrementingNumberLength": {},
          "receiveReport": {
            "type": "boolean"
          },
          "reportToEmail": {},
          "forwardingEmail": {
            "type": "string",
            "minLength": 1
          },
          "accountant": {
            "type": "object",
            "properties": {
              "accountantEmail": {},
              "accountantAccess": {
                "type": "boolean"
              },
              "accountantLoginNotification": {
                "type": "boolean"
              }
            },
            "required": [
              "accountantAccess",
              "accountantLoginNotification"
            ]
          },
          "ocp": {
            "type": "object",
            "properties": {
              "receiptTypeId": {
                "type": "number"
              },
              "invoiceTypeId": {
                "type": "number"
              },
              "defaultLanguage": {
                "type": "string",
                "minLength": 1
              },
              "reminderEveryDays": {
                "type": "number"
              },
              "autoSendEmail": {
                "type": "boolean"
              },
              "disableReminder": {
                "type": "boolean"
              }
            },
            "required": [
              "receiptTypeId",
              "invoiceTypeId",
              "defaultLanguage",
              "reminderEveryDays",
              "autoSendEmail",
              "disableReminder"
            ]
          },
          "personalizedEmail": {
            "type": "object",
            "properties": {
              "fromEmailName": {},
              "fromEmailAddress": {
                "type": "string",
                "minLength": 1
              },
              "replyToEmail": {}
            },
            "required": [
              "fromEmailAddress"
            ]
          }
        },
        "required": [
          "dateFormat",
          "currency",
          "currencySymbol",
          "defaultInvoiceType",
          "defaultTemplate",
          "appLanguage",
          "multiLanguage",
          "receiveReport",
          "forwardingEmail",
          "accountant",
          "ocp",
          "personalizedEmail"
        ]
      },
      "Subscription": {
        "description": "",
        "type": "object",
        "properties": {
          "plan": {
            "type": "string",
            "minLength": 1
          },
          "startedAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "minLength": 1,
            "description": "ISO 8601 format",
            "format": "date-time",
            "readOnly": true
          },
          "recurring": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "API TOKEN": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "Put your API token"
      }
    },
    "parameters": {
      "Accept": {
        "name": "Accept",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "application/json"
      },
      "Content-type": {
        "name": "Content-Type",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "application/json"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "100"
        },
        "description": "Set the results per page limit. Default is 25."
      },
      "withRelations": {
        "name": "withRelations",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1"
        },
        "description": "If you want to load model relationships as well with one call."
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "readOnly": true
                },
                "error": {
                  "type": "string",
                  "minLength": 1,
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "minLength": 1,
                  "readOnly": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "insidentId": {
                      "type": "string",
                      "minLength": 1,
                      "readOnly": true
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "Logged so the Admin can take a look.",
                  "data": {
                    "insidentId": "eb9ff5d5-ee3c-4c24-937b-95644c8db839"
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Not Authorized",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "data": {
                  "type": "array",
                  "items": {
                    "required": [],
                    "properties": {}
                  }
                }
              },
              "required": [
                "statusCode",
                "error",
                "message",
                "data"
              ]
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 401,
                  "error": "Authorization Required",
                  "message": "Make sure to provide a valid token.",
                  "data": []
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Page Not found",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 404,
                  "error": "Not found",
                  "message": "",
                  "data": []
                }
              }
            }
          }
        }
      },
      "405": {
        "description": "Method not supported",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 405,
                  "error": "Not supported",
                  "message": "This method is not supported",
                  "data": []
                }
              }
            }
          }
        }
      },
      "422": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "errors": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 422,
                  "error": "Validation Failed",
                  "message": "Your input had some validation errors.",
                  "errors": {
                    "isCompany": [
                      "The is company field is required."
                    ],
                    "customerType": [
                      "The customer type field is required."
                    ],
                    "company": [
                      "The 'Company' field is required."
                    ],
                    "lang": [
                      "The 'Language' field is required."
                    ]
                  }
                }
              }
            }
          },
          "json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "errors": {
                  "type": "object"
                }
              },
              "required": [
                "statusCode",
                "error",
                "message",
                "errors"
              ]
            },
            "examples": {
              "example": {
                "value": "{\n    \"statusCode\": 422,\n    \"error\": \"Validation Failed\",\n    \"message\": \"Your input had some validation errors.\",\n    \"errors\": {\n        \"isCompany\": [\n            \"The is company field is required.\"\n        ],\n        \"customerType\": [\n            \"The customer type field is required.\"\n        ],\n        \"company\": [\n            \"The 'Company' field is required.\"\n        ],\n        \"lang\": [\n            \"The 'Language' field is required.\"\n        ]\n    }\n}"
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number"
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "insidentId": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "statusCode": 500,
                  "error": "Unfortunate Server error",
                  "message": "",
                  "data": {
                    "insidentId": "1d5c6a8b-113d-40ff-9635-578d5cd02486"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "API Key - 1": []
    }
  ]
}